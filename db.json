{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/default_avatar.jpg","path":"uploads/default_avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"f7d32c6d1ddac7caa964d346c19e920fa7b3986f","modified":1457063081000},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1456999615000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1456999615000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1456999615000},{"_id":"themes/next/.gitignore","hash":"efec790f5b7a0256763e1cc08f12c4f0aff509f6","modified":1456999615000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1456999615000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1456999615000},{"_id":"themes/next/_config.yml","hash":"c19552af14c215711b2d95c897dc52a70925a994","modified":1457071778000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1456999615000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1456999615000},{"_id":"themes/next/gulpfile.coffee","hash":"b3d53f36460119c741a98c0dc494b1c65d3ec943","modified":1456999615000},{"_id":"themes/next/bower.json","hash":"d7f8d4eb7c6ac1bb8d642112601005f93e3da49b","modified":1456999615000},{"_id":"themes/next/package.json","hash":"bd016b54983b7e06a649ee915b2e13a60d47553e","modified":1456999615000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1457073509000},{"_id":"source/_posts/2016-03-04-android-studio-配置ndk环境-利用jni创建demo.md","hash":"557d3c0d72522598ff88ad20ab4fbfdfa5248078","modified":1457349479000},{"_id":"source/_posts/2016-03-07-Android系统版本表速查.md","hash":"053165cef92bc1bb35ae24582267b79565056297","modified":1457349202000},{"_id":"source/_posts/Android-Native-sqlite3-简单用法整理教程-NDK.md","hash":"e0ad46232c2aadc63df910d1cbdd0f3bc197516f","modified":1457350402000},{"_id":"source/_posts/Hexo写博客需要的所有知识总结.md","hash":"b7b506d0ddf0590d9e191688a898056b95e302b6","modified":1457063081000},{"_id":"source/_posts/2016-03-07-利用Swig自动化生成JNI方法.md","hash":"1a07573904a6267bbdb0f336ee317df05195079e","modified":1457331854000},{"_id":"source/_posts/markdown语法例子.md","hash":"0b00a71a2348e0271c27a2ee4e731b762f176362","modified":1457063081000},{"_id":"source/_posts/Mac下搭建Hexo-Github博客.md","hash":"31d9cf166b89e362c2b661e71687238888a8d5aa","modified":1457063081000},{"_id":"source/categories/index.md","hash":"aac05e17b49e5511c578296dd773df031aa2ed6a","modified":1457063081000},{"_id":"source/about/index.md","hash":"6a5119774a549bb596747f73ea1c761f842e0d0d","modified":1457063081000},{"_id":"source/tags/index.md","hash":"3aafd3408fd0084a0c375329abc97aac54455c8d","modified":1457063081000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1456999615000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1456997865000},{"_id":"themes/next/.git/config","hash":"ca83ce520f770c3104c997d323b9f293dd920073","modified":1456999615000},{"_id":"themes/next/.git/index","hash":"214fcd078e39deb5ae188ee0722048d0612d49e3","modified":1456999615000},{"_id":"themes/next/.git/packed-refs","hash":"b59ea40ea6aa32990f642916f1e5d01ad872b64f","modified":1456999615000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1456999615000},{"_id":"themes/next/layout/_layout.swig","hash":"3814bbdecf1ab1006db42083667ab0398e098cec","modified":1456999615000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1456999615000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1456999615000},{"_id":"themes/next/layout/index.swig","hash":"38b1ad401b748965369296b86327d23082a1fe93","modified":1456999615000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1456999615000},{"_id":"themes/next/layout/post.swig","hash":"f32dd1095f4fbee494a86893856dc7cc6329e293","modified":1456999615000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1456999615000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1456999615000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1456999615000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1456999615000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1456999615000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1456999615000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1456999615000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1456999615000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1456999615000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1456999615000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1456999615000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1456999615000},{"_id":"themes/next/test/.jshintrc","hash":"096ed6df627373edd820f24d46b8baf528dee61d","modified":1456999615000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1456999615000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1456997865000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1456997865000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1456997865000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1456997865000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1456997865000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1456997865000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1456997865000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1456997865000},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1456997865000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1456997865000},{"_id":"themes/next/.git/logs/HEAD","hash":"fee0716796ee7765e4cd9fb97d88517c30cf6f8e","modified":1456999615000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1456999615000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1456999615000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1456999615000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1456999615000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"e8e9c986ce1a0b370afd36703d49f1818492cb64","modified":1456999615000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"44cc089c111d7a9df7844affa980e56edd276bf1","modified":1456999615000},{"_id":"themes/next/layout/_macro/post.swig","hash":"379737761f44fb71de997a73192f35b8e568ac58","modified":1456999615000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1456999615000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"f12d7b0946d37853caa29009e6d134c2a378ad20","modified":1456999615000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1456999615000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1456999615000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"82a9bc2ba60ce68419128ff60624bd74b15dfb78","modified":1456999615000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"3003fda5a8af553451f7945f4e1ce006ca72e4c4","modified":1456999615000},{"_id":"themes/next/layout/_partials/head.swig","hash":"7edcc47b01b60e565b39b2baf3a87c20b61c7eaf","modified":1456999615000},{"_id":"themes/next/layout/_partials/header.swig","hash":"0b1dc4509c843c42a6ec08b2dff26d997f14f607","modified":1456999615000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1456999615000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1456999615000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1456999615000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1456999615000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1456999615000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1456999615000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1456999615000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1456999615000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1456999615000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1456999615000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1456999615000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1456999615000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1456999615000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1456999615000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1456999615000},{"_id":"themes/next/source/uploads/.DS_Store","hash":"f41db0ed5a7fa894ae6b87fa1c9b7e70fe058b85","modified":1457063456000},{"_id":"themes/next/source/uploads/default_avatar.jpg","hash":"f8f600b0eb7be611a6a9bc403c6c0e6ff4d83fdf","modified":1457063174000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1456999615000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1456999615000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1456999615000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1456999615000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1456999615000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1456999615000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1456999615000},{"_id":"themes/next/.git/refs/heads/master","hash":"32a81acb47ffc5c066de4aa08f5923c82cb42363","modified":1456999615000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"acdea5e939e148b807216ca44a6843e433ccdb52","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/baidushare.swig","hash":"d726361945437cf6e48067b3dd041b7e36e98d85","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"d79bd946f07b83b47926dd67bb9d40e652b94769","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"df03220eb8526e17dc9c9f17780c2d6699367181","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"2fc4a0d2c825a512f39c0eadd78452e90615465a","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"6c666819b3178a6f661c2152ff95026aea750f69","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1456999615000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1456999615000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1456999615000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1456999615000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"363482dc4cc5002e8ae2164d86939486f13ec8b6","modified":1456999615000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1456999615000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1456999615000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1456999615000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"4e49707c99c8bbcfa0a607dfdaff0fbb7dffd2a3","modified":1456999615000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1456999615000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1456999615000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1456999615000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"e6488372eacb4c8acbda42ed366e27a6de7693d4","modified":1456999615000},{"_id":"themes/next/source/css/_variables/default.styl","hash":"8ec3307fe42d738b1bbda4b6419d0995f5560222","modified":1456999615000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"72d1fe35024ea91ebfd0298d1fbc8df82abd4ce7","modified":1456999615000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1456999615000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1456999615000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"cca1fe42d49d3946f44b6ef1b247175f16ba796c","modified":1456999615000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1456999615000},{"_id":"themes/next/source/js/src/motion.js","hash":"58d02f0d1d495c39a9b2a36009915faf51660e50","modified":1456999615000},{"_id":"themes/next/source/js/src/utils.js","hash":"7eb00abf9bc14516463d9f29db41805e808a565c","modified":1456999615000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1456999615000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1456999615000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1456999615000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1456999615000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1456999615000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1456999615000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1456999615000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1456999615000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1456999615000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1456999615000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1456999615000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1456999615000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1456999615000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1456999615000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1456999615000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1456999615000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1456999615000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"fee0716796ee7765e4cd9fb97d88517c30cf6f8e","modified":1456999615000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1456999615000},{"_id":"themes/next/.git/objects/pack/pack-9f8454b356dcd1a7963ee226c259d2a0bd89cd6a.idx","hash":"0275cf6ef3a4ed4e48f5a6afba7d1f3e840a7fc3","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"334176d838ee528e58468d8bc74ff3a6d3f25b2b","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"3491d3cebabc8a28857200db28a1be65aad6adc2","modified":1456999615000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"fa2b7a0006b6c447fa025474f8e0af4e4e569a36","modified":1456999615000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1456999615000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"6dc928ddfc4c93ad2ffef2556aaaae155033abec","modified":1456999615000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"5f766cf26f966dbf9dcfe681f40ab9032e3e8a08","modified":1456999615000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1456999615000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"8d9b0f37cf0cd1c25e36303041406a8c72caf766","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1456999615000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"7ef0d31c84df1a42806e6d7a8cf0ccb72861fe4c","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"a9dc44b6320180c1446194d1ba0fadde88dbf886","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"870a3efaebac2733a32283f3e30b19a127d7d92b","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c9b21deba07b6818e129dcf6e19b81e4d0e9f97a","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"8aca5d9f1df157ab27e699c1b3ba9438b9e039ad","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"9658d09de4fcc809a29d4b706a9621adfb3090ad","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"58a036397de73d868fee16f34d246a3d863f30c2","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"dcbfef1c76288620f7f405a7aeba893d458d5b6a","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1456999615000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"94f935331995bfeadf1084fb8f0665ab39fd1c8d","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"b28187c610bf5f05e27732f72c3486494689bbfe","modified":1456999615000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1456999615000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1456999615000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1456999615000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1456999615000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1456999615000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1456999615000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"fee0716796ee7765e4cd9fb97d88517c30cf6f8e","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"455d55cc693a1dcbf729b3d041edd0171093bdd3","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"23dd966324937deeccc8f5fa16a6d32e4e46243b","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"61763d236029d2a4414be499d0e65d7dfb34605b","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4f696a2eaeee2f214adcf273eab25c62a398077a","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"55a7b6d0b6d4aa61d6e252ad7fe7b34865dc9d67","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"053241588554355d836ba7767baf810768edce4b","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"fe71e9be08cb418cf68352fd6212ddd0d7150579","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"330a2ce52c5a5fefc1e85c473113a3bc58210c76","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"99d994bd19895a4aaa2fa8d12801ec72dd3cf118","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"01db9373cd13c1aec840205c622064dd6ae03361","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"5c415dc8efab7c1bdeffacafa3100d1da6628b03","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"ae19721ceee5ba460e131cb2427dae3c1ff39d6f","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"89fef1caf94caf76ca09c643b83b0b4d4e417e08","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"6242be4307a3b3dafc14e556f51c8875c41a1ddd","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"6533563b34241e5c73da68156aba89e880b93f53","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"1099b5d07a60d93dad6221677c60cba60a82266b","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"58fb7604b44e3f56d880bbbd95d0baface38c4ee","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1456999615000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1456999615000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1456999615000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1456999615000},{"_id":"themes/next/.git/objects/pack/pack-9f8454b356dcd1a7963ee226c259d2a0bd89cd6a.pack","hash":"a3c0dbfd8b03bb2512c2440c41d220fc7c1e1aa6","modified":1456999615000},{"_id":"public/atom.xml","hash":"ba034bb4140339ab5dff5866ccb11767db9080d4","modified":1457350418365},{"_id":"public/404.html","hash":"451803c99efa3179db3bf91ce4821cf33bb0b5b3","modified":1457342349169},{"_id":"public/categories/index.html","hash":"a6568680acb31e6087bd20e6756168c12025c14e","modified":1457342349177},{"_id":"public/about/index.html","hash":"cd3ec68018feffbcb84502aff33d3efe4eda1539","modified":1457342349177},{"_id":"public/tags/index.html","hash":"ca9a07fd660de030c69e7cf2fd2f4498891cbbda","modified":1457342349177},{"_id":"public/2016/03/03/markdown语法例子/index.html","hash":"18902f8782366e47251569f681a920f58a095ce2","modified":1457342349177},{"_id":"public/categories/android-native/index.html","hash":"92619c4dbf56bbb79e0ebccf407654543d696ed4","modified":1457342349226},{"_id":"public/categories/工具和插件/index.html","hash":"6851f6bd8106a65affc9121e76a7ac0f4d405766","modified":1457342349226},{"_id":"public/categories/参考/index.html","hash":"421e361e2b3dd51ae7e1f820e0ce53973919012b","modified":1457342349226},{"_id":"public/tags/c-c/index.html","hash":"b414173857ece967c9f0ab773d9f8f43d6f7c377","modified":1457342349226},{"_id":"public/tags/android/index.html","hash":"f1eb4158102a71cff44e6b114f37fa801f64e059","modified":1457342349226},{"_id":"public/tags/ndk/index.html","hash":"6a1e62e889ee87c29d65f6f7b314e8732a15799d","modified":1457342349226},{"_id":"public/tags/markdown/index.html","hash":"06e339f0f3f261fd95ff4c10849f9d34a0588195","modified":1457342349226},{"_id":"public/tags/经验总结/index.html","hash":"95a26b16c5143994de175da23de753e001a079d7","modified":1457342349226},{"_id":"public/tags/Hexo/index.html","hash":"f77e2e212bdeffed1ccd79c27d80d37f7d756fe9","modified":1457342349226},{"_id":"public/tags/demo/index.html","hash":"38febe1cbf4e2c85e9036a7aed7dd5e5926c235d","modified":1457342349226},{"_id":"public/tags/sqlite3/index.html","hash":"21516952d66445cda9d0699c07e99e728651b8b4","modified":1457342349227},{"_id":"public/tags/Github/index.html","hash":"daaa9a9c829635a49ac22d4df445625bb9cb4e27","modified":1457342349227},{"_id":"public/tags/工具/index.html","hash":"0486cfb18041bb46149cfcff7c46b94df8f7a6c4","modified":1457342349227},{"_id":"public/2016/03/07/Android系统版本表速查/index.html","hash":"417e232559f018d8b7fa41ba39063f5bcfd21920","modified":1457349221805},{"_id":"public/2016/03/07/利用Swig自动化生成JNI方法/index.html","hash":"d854d8265ac93a563001c98bbeefd12ec51182dd","modified":1457342349227},{"_id":"public/2016/03/03/Android-Native-sqlite3-简单用法整理教程-NDK/index.html","hash":"5e6365084e0a8a09315dd4e7eeb706bab01c3ebc","modified":1457350418380},{"_id":"public/2016/03/03/Mac下搭建Hexo-Github博客/index.html","hash":"718ac965023af695cb684d29f8964aa665f6ccf4","modified":1457342349228},{"_id":"public/2016/03/03/Hexo写博客需要的所有知识总结/index.html","hash":"10191e088f29789b7452d71bcbd821832a68cd50","modified":1457342349228},{"_id":"public/archives/index.html","hash":"75534b9e2d0987dae5af8f830ffb7f3ce17dd40c","modified":1457342349228},{"_id":"public/index.html","hash":"8c8300f10cad00978fa4f912580f8967a856f78e","modified":1457349221805},{"_id":"public/archives/2016/index.html","hash":"b007de7bdc8f121213e42fe6e330d60bb35ed56b","modified":1457342349228},{"_id":"public/archives/2016/03/index.html","hash":"25d4547b1e1625bc8d5591e977996f30186ff15b","modified":1457342349228},{"_id":"public/2016/03/04/android-studio-配置ndk环境-利用jni创建demo/index.html","hash":"fee6198a8876c3063c579d6d8d883bc887e30628","modified":1457349486031},{"_id":"public/page/2/index.html","hash":"8f53d5597f82a021e0723dcc52fa4b86bed504c9","modified":1457350418381},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1457342349235},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1457342349235},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1457342349235},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1457342349235},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1457342349235},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1457342349235},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1457342349236},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1457342349236},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1457342349236},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1457342349236},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1457342349236},{"_id":"public/uploads/default_avatar.jpg","hash":"f8f600b0eb7be611a6a9bc403c6c0e6ff4d83fdf","modified":1457342349236},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1457342349236},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1457342349236},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1457342349236},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1457342349236},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1457342349236},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1457342349236},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1457342349236},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1457342349236},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1457342349236},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1457342349236},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1457342349236},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1457342349237},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1457342350130},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1457342350139},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1457342350139},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1457342350146},{"_id":"public/js/src/motion.js","hash":"58d02f0d1d495c39a9b2a36009915faf51660e50","modified":1457342350146},{"_id":"public/js/src/bootstrap.js","hash":"cca1fe42d49d3946f44b6ef1b247175f16ba796c","modified":1457342350146},{"_id":"public/js/src/utils.js","hash":"7eb00abf9bc14516463d9f29db41805e808a565c","modified":1457342350146},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1457342350146},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1457342350146},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1457342350146},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1457342350146},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1457342350147},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1457342350147},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1457342350147},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1457342350147},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1457342350147},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1457342350147},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1457342350147},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1457342350147},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1457342350147},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1457342350147},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1457342350147},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1457342350147},{"_id":"public/js/src/schemes/pisces.js","hash":"94f935331995bfeadf1084fb8f0665ab39fd1c8d","modified":1457342350148},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1457342350148},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1457342350148},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1457342350148},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1457342350148},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1457342350149},{"_id":"public/css/main.css","hash":"02d66ef9bf77ed352d943a644a57378732d11f72","modified":1457342350149},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1457342350149},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1457342350149},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1457342350149},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1457342350149},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1457342350149},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1457342350149},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1457342350149},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1457342350149},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1457342350149},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1457342350149},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1457342350157}],"Category":[{"name":"android native","_id":"cilhs085j0009ggd5bzi0881u"},{"name":"工具和插件","_id":"cilhs085t000eggd5jwjnmio4"},{"name":"参考","_id":"cilhs085v000hggd5nn5f4v7l"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n</html>","date":"2016-03-04T03:44:41.000Z","updated":"2016-03-04T03:44:41.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cilhs083b0000ggd53nvkhv77","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"your site url \" homepagename=\"回到我的主页\"></script>\n\n</body>\n</html>","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n</html>"},{"title":"categories","date":"2016-03-03T12:20:57.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-03-03 20:20:57\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-03-04T03:44:41.000Z","path":"categories/index.html","layout":"page","_id":"cilhs08500002ggd5x7j2dge0","content":"","excerpt":"","more":""},{"title":"about","date":"2016-03-03T12:05:34.000Z","comments":0,"duoshuo_hotartical":false,"_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-03-03 20:05:34\ncomments: false\nduoshuo_hotartical: false\n---\n","updated":"2016-03-04T03:44:41.000Z","path":"about/index.html","layout":"page","_id":"cilhs08550004ggd53bv7kykw","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-03-03T12:14:08.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-03-03 20:14:08\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-03-04T03:44:41.000Z","path":"tags/index.html","layout":"page","_id":"cilhs08590006ggd533yfnc7g","content":"","excerpt":"","more":""}],"Post":[{"title":"android studio 配置ndk环境 利用jni创建demo","date":"2016-03-04T06:59:43.000Z","_content":"\n\n本篇文章用来介绍最新的android studio使用ndk工程的转换\n所有操作设置来自官方文档，如有更新请参考官方文档\nhttp://tools.android.com/tech-docs/new-build-system/gradle-experimental\n\n\n## 环境说明\n\n* mac os 10.11.2\n* android studio 2.0 Beta5\n* ndk r9d\n* gradle-2.10-all.zip\n* gradle-experimental:0.6.0-beta5\n\n* android studio（以后简称as） 在1.3 Beta1版本引入NDK支持，\n请确保你的as已有安装ndk support,验证方法 Preference...-> 搜索ndk \n结果如下图所示\n\n\n## Step 1\n创建一个empty工程备用，用来加入ndk支持, 并将项目视图Android切换为Project.\n如果已经下载ndk，直接指定目录，否则下载ndk环境\n\n* 下载设置ndk环境\n／／图片\n\n* 指定ndk目录\n／／图片\n\n\n\n\n## Step 2\n* 修改gradle版本\n修改在项目文件夹下的gradle/wrapper/gradle-wrapper.properties\n{% codeblock %}\n#Mon Dec 28 10:00:20 PST 2015\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-2.10-all.zip\n{% endcodeblock %}\n我这里用的是目前最新版的 https\\://services.gradle.org/distributions/gradle-2.10-all.zip \n\n\n* 修改gradle编译工具的版本\n在项目下的build.gradle文件中更改gradle版本，**注意是项目下的build.gradle**\n{% codeblock %}\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle-experimental:0.6.0-beta5'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n{% endcodeblock %}\n\n这里的build工具使用gradle-experimental，因为目前ndk加入还是比较不方便的实验版本，但功能其实是可用的。\n我这里用的同样是最新的gradle-experimental:0.6.0-beta5\n\n* gradle 和 gradle编译工具 版本依赖的问题\n注意 gradle编译工具的版本对 gradle版本有兼容依赖的关系, 反则没有。\n也就是说 比如最新的gradle-experimental:0.6.0-beta5 只有gradle-2.10-all.zip才能适用。\n但我用最新的gradle-2.10-all.zip，使用低版本的gradle-experimental:0.2.0没有影响，所以这点需要注意。\n\n\n**更新gradle设置可能需要下载新的文件，天朝网络可能被墙，请确保可以科学上网**\n\n\n## Step 3\n\n* 修改app的build.gradle 或者 library的build.gradle\n\n目前只有app工程，修改它的build.gradle文件DSL写法\n不同版本gradle编译工具的DSL写法不同，这里用的是最新版本的0.6.0-beta5\n如果是以前版本写法可以参考官方 https://sites.google.com/a/android.com/tools/tech-docs/new-build-system/gradle-experimental/0-4-0\n\n修改之前的代码：\n{% codeblock %}\napply plugin: 'com.android.application'\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"23.0.2\"\n\n    defaultConfig {\n        applicationId \"com.example.android.tang.androidstudiojnidemoforndk10\"\n        minSdkVersion 15\n        targetSdkVersion 23\n        versionCode 1\n        versionName \"1.0\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:23.1.1'\n}\n{% endcodeblock %}\n\n\n修改后的代码：\n{% codeblock %}\napply plugin: \"com.android.model.application\"\n\nmodel {\n    android {\n        compileSdkVersion 23\n        buildToolsVersion \"23.0.2\"\n\n        defaultConfig {\n            applicationId \"com.example.android.tang.androidstudiojnidemoforndk10\"\n            minSdkVersion.apiLevel 15\n            targetSdkVersion.apiLevel 23\n            versionCode 1\n            versionName \"1.0\"\n        }\n        buildTypes {\n            release {\n                minifyEnabled false\n                proguardFiles.add(file(\"proguard-rules.pro\"))\n            }\n        }\n\n        sources {\n            main {\n                java {\n                    source {\n                        srcDir \"src\"\n                    }\n                }\n            }\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:23.1.1'\n}\n{% endcodeblock %}\n\n\n* DSL的改变:\n1. 用com.android.model.application代替com.android.application\n2. 如果创建aarlibrary用com.android.model.library代替com.android.library \n3. 配置用model { } 块包装起来\n4. 添加元素用add方法\n\n* DSL的目前的局限性\n1. 属性List只能接受唯一属性类型，比如你可以设置一个File使用String类型,但List<File>的类型列表只接受File对象。\n2. 创建一个buildType或productFlavor需要调用create方法,只需要换一个名字，改变一个现有的Relese和Debug的buildType，\n3. DSL修改变量和任务功能很一般\n\n## Step 4 引入NDK\n\n* 加入ndk编译module\n在app目录下的build.gradle 加入\n{% codeblock %}\nndk {                       \n    moduleName \"native\"         //指定生成的lib，比如此时生成native.so\n}\n{% endcodeblock %}\n之后为：\n{% codeblock %}\nmodel {\n    android {\n        compileSdkVersion 23\n        buildToolsVersion \"23.0.2\"\n        ndk {                       \n            moduleName \"native\"         \n        }\n    }\n}\n{% endcodeblock %}\n\n* 加入JNI目录\n\n在目录app/src/main下创建jni目录，然后修改build.gradle 新增Source Set：\n{% codeblock %}\nsources {\n    main {\n        jni {\n            source {\n                srcDir \"src\"\n            }\n        }\n    }\n}\n{% endcodeblock %}\n\n## Step 5 代码中生成JNI代码\n\n在activity中加载module native，加入本地方法test()\n\n{% codeblock %}\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener{\n    static {\n        System.loadLibrary(\"native\");\n    }\n\n    public native String test();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        findViewById(R.id.button).setOnClickListener(this);\n    }\n\n    @Override\n    public void onClick(View v) {\n        Log.i(\"####\",test());\n    }\n}\n{% endcodeblock %}\n\n代码提示test()方法，自动生成jni代码\n\n／／图片\n\n编译运行，搞定！\n\n代码在： https://github.com/tangfuhao/AndroidStudioJNIDemoForNDK10\n\n\n\n\n\n","source":"_posts/2016-03-04-android-studio-配置ndk环境-利用jni创建demo.md","raw":"---\ntitle: android studio 配置ndk环境 利用jni创建demo\ndate: 2016-03-04 14:59:43\ntags:\n---\n\n\n本篇文章用来介绍最新的android studio使用ndk工程的转换\n所有操作设置来自官方文档，如有更新请参考官方文档\nhttp://tools.android.com/tech-docs/new-build-system/gradle-experimental\n\n\n## 环境说明\n\n* mac os 10.11.2\n* android studio 2.0 Beta5\n* ndk r9d\n* gradle-2.10-all.zip\n* gradle-experimental:0.6.0-beta5\n\n* android studio（以后简称as） 在1.3 Beta1版本引入NDK支持，\n请确保你的as已有安装ndk support,验证方法 Preference...-> 搜索ndk \n结果如下图所示\n\n\n## Step 1\n创建一个empty工程备用，用来加入ndk支持, 并将项目视图Android切换为Project.\n如果已经下载ndk，直接指定目录，否则下载ndk环境\n\n* 下载设置ndk环境\n／／图片\n\n* 指定ndk目录\n／／图片\n\n\n\n\n## Step 2\n* 修改gradle版本\n修改在项目文件夹下的gradle/wrapper/gradle-wrapper.properties\n{% codeblock %}\n#Mon Dec 28 10:00:20 PST 2015\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-2.10-all.zip\n{% endcodeblock %}\n我这里用的是目前最新版的 https\\://services.gradle.org/distributions/gradle-2.10-all.zip \n\n\n* 修改gradle编译工具的版本\n在项目下的build.gradle文件中更改gradle版本，**注意是项目下的build.gradle**\n{% codeblock %}\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle-experimental:0.6.0-beta5'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n{% endcodeblock %}\n\n这里的build工具使用gradle-experimental，因为目前ndk加入还是比较不方便的实验版本，但功能其实是可用的。\n我这里用的同样是最新的gradle-experimental:0.6.0-beta5\n\n* gradle 和 gradle编译工具 版本依赖的问题\n注意 gradle编译工具的版本对 gradle版本有兼容依赖的关系, 反则没有。\n也就是说 比如最新的gradle-experimental:0.6.0-beta5 只有gradle-2.10-all.zip才能适用。\n但我用最新的gradle-2.10-all.zip，使用低版本的gradle-experimental:0.2.0没有影响，所以这点需要注意。\n\n\n**更新gradle设置可能需要下载新的文件，天朝网络可能被墙，请确保可以科学上网**\n\n\n## Step 3\n\n* 修改app的build.gradle 或者 library的build.gradle\n\n目前只有app工程，修改它的build.gradle文件DSL写法\n不同版本gradle编译工具的DSL写法不同，这里用的是最新版本的0.6.0-beta5\n如果是以前版本写法可以参考官方 https://sites.google.com/a/android.com/tools/tech-docs/new-build-system/gradle-experimental/0-4-0\n\n修改之前的代码：\n{% codeblock %}\napply plugin: 'com.android.application'\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"23.0.2\"\n\n    defaultConfig {\n        applicationId \"com.example.android.tang.androidstudiojnidemoforndk10\"\n        minSdkVersion 15\n        targetSdkVersion 23\n        versionCode 1\n        versionName \"1.0\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:23.1.1'\n}\n{% endcodeblock %}\n\n\n修改后的代码：\n{% codeblock %}\napply plugin: \"com.android.model.application\"\n\nmodel {\n    android {\n        compileSdkVersion 23\n        buildToolsVersion \"23.0.2\"\n\n        defaultConfig {\n            applicationId \"com.example.android.tang.androidstudiojnidemoforndk10\"\n            minSdkVersion.apiLevel 15\n            targetSdkVersion.apiLevel 23\n            versionCode 1\n            versionName \"1.0\"\n        }\n        buildTypes {\n            release {\n                minifyEnabled false\n                proguardFiles.add(file(\"proguard-rules.pro\"))\n            }\n        }\n\n        sources {\n            main {\n                java {\n                    source {\n                        srcDir \"src\"\n                    }\n                }\n            }\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:23.1.1'\n}\n{% endcodeblock %}\n\n\n* DSL的改变:\n1. 用com.android.model.application代替com.android.application\n2. 如果创建aarlibrary用com.android.model.library代替com.android.library \n3. 配置用model { } 块包装起来\n4. 添加元素用add方法\n\n* DSL的目前的局限性\n1. 属性List只能接受唯一属性类型，比如你可以设置一个File使用String类型,但List<File>的类型列表只接受File对象。\n2. 创建一个buildType或productFlavor需要调用create方法,只需要换一个名字，改变一个现有的Relese和Debug的buildType，\n3. DSL修改变量和任务功能很一般\n\n## Step 4 引入NDK\n\n* 加入ndk编译module\n在app目录下的build.gradle 加入\n{% codeblock %}\nndk {                       \n    moduleName \"native\"         //指定生成的lib，比如此时生成native.so\n}\n{% endcodeblock %}\n之后为：\n{% codeblock %}\nmodel {\n    android {\n        compileSdkVersion 23\n        buildToolsVersion \"23.0.2\"\n        ndk {                       \n            moduleName \"native\"         \n        }\n    }\n}\n{% endcodeblock %}\n\n* 加入JNI目录\n\n在目录app/src/main下创建jni目录，然后修改build.gradle 新增Source Set：\n{% codeblock %}\nsources {\n    main {\n        jni {\n            source {\n                srcDir \"src\"\n            }\n        }\n    }\n}\n{% endcodeblock %}\n\n## Step 5 代码中生成JNI代码\n\n在activity中加载module native，加入本地方法test()\n\n{% codeblock %}\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener{\n    static {\n        System.loadLibrary(\"native\");\n    }\n\n    public native String test();\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        findViewById(R.id.button).setOnClickListener(this);\n    }\n\n    @Override\n    public void onClick(View v) {\n        Log.i(\"####\",test());\n    }\n}\n{% endcodeblock %}\n\n代码提示test()方法，自动生成jni代码\n\n／／图片\n\n编译运行，搞定！\n\n代码在： https://github.com/tangfuhao/AndroidStudioJNIDemoForNDK10\n\n\n\n\n\n","slug":"android-studio-配置ndk环境-利用jni创建demo","published":1,"updated":"2016-03-07T11:17:59.000Z","_id":"cilhs084v0001ggd56ak8v54j","comments":1,"layout":"post","photos":[],"link":"","content":"<p>本篇文章用来介绍最新的android studio使用ndk工程的转换<br>所有操作设置来自官方文档，如有更新请参考官方文档<br><a href=\"http://tools.android.com/tech-docs/new-build-system/gradle-experimental\" target=\"_blank\" rel=\"external\">http://tools.android.com/tech-docs/new-build-system/gradle-experimental</a></p>\n<h2 id=\"环境说明\"><a href=\"#环境说明\" class=\"headerlink\" title=\"环境说明\"></a>环境说明</h2><ul>\n<li>mac os 10.11.2</li>\n<li>android studio 2.0 Beta5</li>\n<li>ndk r9d</li>\n<li>gradle-2.10-all.zip</li>\n<li><p>gradle-experimental:0.6.0-beta5</p>\n</li>\n<li><p>android studio（以后简称as） 在1.3 Beta1版本引入NDK支持，<br>请确保你的as已有安装ndk support,验证方法 Preference…-&gt; 搜索ndk<br>结果如下图所示</p>\n</li>\n</ul>\n<h2 id=\"Step-1\"><a href=\"#Step-1\" class=\"headerlink\" title=\"Step 1\"></a>Step 1</h2><p>创建一个empty工程备用，用来加入ndk支持, 并将项目视图Android切换为Project.<br>如果已经下载ndk，直接指定目录，否则下载ndk环境</p>\n<ul>\n<li><p>下载设置ndk环境<br>／／图片</p>\n</li>\n<li><p>指定ndk目录<br>／／图片</p>\n</li>\n</ul>\n<h2 id=\"Step-2\"><a href=\"#Step-2\" class=\"headerlink\" title=\"Step 2\"></a>Step 2</h2><ul>\n<li>修改gradle版本<br>修改在项目文件夹下的gradle/wrapper/gradle-wrapper.properties<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#Mon Dec 28 10:00:20 PST 2015</span><br><span class=\"line\">distributionBase=GRADLE_USER_HOME</span><br><span class=\"line\">distributionPath=wrapper/dists</span><br><span class=\"line\">zipStoreBase=GRADLE_USER_HOME</span><br><span class=\"line\">zipStorePath=wrapper/dists</span><br><span class=\"line\">distributionUrl=https\\://services.gradle.org/distributions/gradle-2.10-all.zip</span><br></pre></td></tr></table></figure>\n我这里用的是目前最新版的 https\\://services.gradle.org/distributions/gradle-2.10-all.zip </li>\n</ul>\n<ul>\n<li>修改gradle编译工具的版本<br>在项目下的build.gradle文件中更改gradle版本，<strong>注意是项目下的build.gradle</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildscript &#123;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        jcenter()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dependencies &#123;</span><br><span class=\"line\">        classpath &apos;com.android.tools.build:gradle-experimental:0.6.0-beta5&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">        // NOTE: Do not place your application dependencies here; they belong</span><br><span class=\"line\">        // in the individual module build.gradle files</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">allprojects &#123;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        jcenter()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">task clean(type: Delete) &#123;</span><br><span class=\"line\">    delete rootProject.buildDir</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这里的build工具使用gradle-experimental，因为目前ndk加入还是比较不方便的实验版本，但功能其实是可用的。<br>我这里用的同样是最新的gradle-experimental:0.6.0-beta5</p>\n<ul>\n<li>gradle 和 gradle编译工具 版本依赖的问题<br>注意 gradle编译工具的版本对 gradle版本有兼容依赖的关系, 反则没有。<br>也就是说 比如最新的gradle-experimental:0.6.0-beta5 只有gradle-2.10-all.zip才能适用。<br>但我用最新的gradle-2.10-all.zip，使用低版本的gradle-experimental:0.2.0没有影响，所以这点需要注意。</li>\n</ul>\n<p><strong>更新gradle设置可能需要下载新的文件，天朝网络可能被墙，请确保可以科学上网</strong></p>\n<h2 id=\"Step-3\"><a href=\"#Step-3\" class=\"headerlink\" title=\"Step 3\"></a>Step 3</h2><ul>\n<li>修改app的build.gradle 或者 library的build.gradle</li>\n</ul>\n<p>目前只有app工程，修改它的build.gradle文件DSL写法<br>不同版本gradle编译工具的DSL写法不同，这里用的是最新版本的0.6.0-beta5<br>如果是以前版本写法可以参考官方 <a href=\"https://sites.google.com/a/android.com/tools/tech-docs/new-build-system/gradle-experimental/0-4-0\" target=\"_blank\" rel=\"external\">https://sites.google.com/a/android.com/tools/tech-docs/new-build-system/gradle-experimental/0-4-0</a></p>\n<p>修改之前的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: &apos;com.android.application&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">android &#123;</span><br><span class=\"line\">    compileSdkVersion 23</span><br><span class=\"line\">    buildToolsVersion &quot;23.0.2&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    defaultConfig &#123;</span><br><span class=\"line\">        applicationId &quot;com.example.android.tang.androidstudiojnidemoforndk10&quot;</span><br><span class=\"line\">        minSdkVersion 15</span><br><span class=\"line\">        targetSdkVersion 23</span><br><span class=\"line\">        versionCode 1</span><br><span class=\"line\">        versionName &quot;1.0&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    buildTypes &#123;</span><br><span class=\"line\">        release &#123;</span><br><span class=\"line\">            minifyEnabled false</span><br><span class=\"line\">            proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])</span><br><span class=\"line\">    testCompile &apos;junit:junit:4.12&apos;</span><br><span class=\"line\">    compile &apos;com.android.support:appcompat-v7:23.1.1&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>修改后的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: &quot;com.android.model.application&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">model &#123;</span><br><span class=\"line\">    android &#123;</span><br><span class=\"line\">        compileSdkVersion 23</span><br><span class=\"line\">        buildToolsVersion &quot;23.0.2&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        defaultConfig &#123;</span><br><span class=\"line\">            applicationId &quot;com.example.android.tang.androidstudiojnidemoforndk10&quot;</span><br><span class=\"line\">            minSdkVersion.apiLevel 15</span><br><span class=\"line\">            targetSdkVersion.apiLevel 23</span><br><span class=\"line\">            versionCode 1</span><br><span class=\"line\">            versionName &quot;1.0&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        buildTypes &#123;</span><br><span class=\"line\">            release &#123;</span><br><span class=\"line\">                minifyEnabled false</span><br><span class=\"line\">                proguardFiles.add(file(&quot;proguard-rules.pro&quot;))</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        sources &#123;</span><br><span class=\"line\">            main &#123;</span><br><span class=\"line\">                java &#123;</span><br><span class=\"line\">                    source &#123;</span><br><span class=\"line\">                        srcDir &quot;src&quot;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])</span><br><span class=\"line\">    testCompile &apos;junit:junit:4.12&apos;</span><br><span class=\"line\">    compile &apos;com.android.support:appcompat-v7:23.1.1&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>DSL的改变:</li>\n</ul>\n<ol>\n<li>用com.android.model.application代替com.android.application</li>\n<li>如果创建aarlibrary用com.android.model.library代替com.android.library </li>\n<li>配置用model { } 块包装起来</li>\n<li>添加元素用add方法</li>\n</ol>\n<ul>\n<li>DSL的目前的局限性</li>\n</ul>\n<ol>\n<li>属性List只能接受唯一属性类型，比如你可以设置一个File使用String类型,但List<file>的类型列表只接受File对象。</file></li>\n<li>创建一个buildType或productFlavor需要调用create方法,只需要换一个名字，改变一个现有的Relese和Debug的buildType，</li>\n<li>DSL修改变量和任务功能很一般</li>\n</ol>\n<h2 id=\"Step-4-引入NDK\"><a href=\"#Step-4-引入NDK\" class=\"headerlink\" title=\"Step 4 引入NDK\"></a>Step 4 引入NDK</h2><ul>\n<li><p>加入ndk编译module<br>在app目录下的build.gradle 加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ndk &#123;                       </span><br><span class=\"line\">    moduleName &quot;native&quot;         //指定生成的lib，比如此时生成native.so</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>之后为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model &#123;</span><br><span class=\"line\">    android &#123;</span><br><span class=\"line\">        compileSdkVersion 23</span><br><span class=\"line\">        buildToolsVersion &quot;23.0.2&quot;</span><br><span class=\"line\">        ndk &#123;                       </span><br><span class=\"line\">            moduleName &quot;native&quot;         </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加入JNI目录</p>\n</li>\n</ul>\n<p>在目录app/src/main下创建jni目录，然后修改build.gradle 新增Source Set：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sources &#123;</span><br><span class=\"line\">    main &#123;</span><br><span class=\"line\">        jni &#123;</span><br><span class=\"line\">            source &#123;</span><br><span class=\"line\">                srcDir &quot;src&quot;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Step-5-代码中生成JNI代码\"><a href=\"#Step-5-代码中生成JNI代码\" class=\"headerlink\" title=\"Step 5 代码中生成JNI代码\"></a>Step 5 代码中生成JNI代码</h2><p>在activity中加载module native，加入本地方法test()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MainActivity extends AppCompatActivity implements View.OnClickListener&#123;</span><br><span class=\"line\">    static &#123;</span><br><span class=\"line\">        System.loadLibrary(&quot;native&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public native String test();</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\"></span><br><span class=\"line\">        findViewById(R.id.button).setOnClickListener(this);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void onClick(View v) &#123;</span><br><span class=\"line\">        Log.i(&quot;####&quot;,test());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>代码提示test()方法，自动生成jni代码</p>\n<p>／／图片</p>\n<p>编译运行，搞定！</p>\n<p>代码在： <a href=\"https://github.com/tangfuhao/AndroidStudioJNIDemoForNDK10\" target=\"_blank\" rel=\"external\">https://github.com/tangfuhao/AndroidStudioJNIDemoForNDK10</a></p>\n","excerpt":"","more":"<p>本篇文章用来介绍最新的android studio使用ndk工程的转换<br>所有操作设置来自官方文档，如有更新请参考官方文档<br><a href=\"http://tools.android.com/tech-docs/new-build-system/gradle-experimental\">http://tools.android.com/tech-docs/new-build-system/gradle-experimental</a></p>\n<h2 id=\"环境说明\"><a href=\"#环境说明\" class=\"headerlink\" title=\"环境说明\"></a>环境说明</h2><ul>\n<li>mac os 10.11.2</li>\n<li>android studio 2.0 Beta5</li>\n<li>ndk r9d</li>\n<li>gradle-2.10-all.zip</li>\n<li><p>gradle-experimental:0.6.0-beta5</p>\n</li>\n<li><p>android studio（以后简称as） 在1.3 Beta1版本引入NDK支持，<br>请确保你的as已有安装ndk support,验证方法 Preference…-&gt; 搜索ndk<br>结果如下图所示</p>\n</li>\n</ul>\n<h2 id=\"Step-1\"><a href=\"#Step-1\" class=\"headerlink\" title=\"Step 1\"></a>Step 1</h2><p>创建一个empty工程备用，用来加入ndk支持, 并将项目视图Android切换为Project.<br>如果已经下载ndk，直接指定目录，否则下载ndk环境</p>\n<ul>\n<li><p>下载设置ndk环境<br>／／图片</p>\n</li>\n<li><p>指定ndk目录<br>／／图片</p>\n</li>\n</ul>\n<h2 id=\"Step-2\"><a href=\"#Step-2\" class=\"headerlink\" title=\"Step 2\"></a>Step 2</h2><ul>\n<li>修改gradle版本<br>修改在项目文件夹下的gradle/wrapper/gradle-wrapper.properties<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#Mon Dec 28 10:00:20 PST 2015</span><br><span class=\"line\">distributionBase=GRADLE_USER_HOME</span><br><span class=\"line\">distributionPath=wrapper/dists</span><br><span class=\"line\">zipStoreBase=GRADLE_USER_HOME</span><br><span class=\"line\">zipStorePath=wrapper/dists</span><br><span class=\"line\">distributionUrl=https\\://services.gradle.org/distributions/gradle-2.10-all.zip</span><br></pre></td></tr></table></figure>\n我这里用的是目前最新版的 https\\://services.gradle.org/distributions/gradle-2.10-all.zip </li>\n</ul>\n<ul>\n<li>修改gradle编译工具的版本<br>在项目下的build.gradle文件中更改gradle版本，<strong>注意是项目下的build.gradle</strong><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildscript &#123;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        jcenter()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dependencies &#123;</span><br><span class=\"line\">        classpath &apos;com.android.tools.build:gradle-experimental:0.6.0-beta5&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">        // NOTE: Do not place your application dependencies here; they belong</span><br><span class=\"line\">        // in the individual module build.gradle files</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">allprojects &#123;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        jcenter()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">task clean(type: Delete) &#123;</span><br><span class=\"line\">    delete rootProject.buildDir</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>这里的build工具使用gradle-experimental，因为目前ndk加入还是比较不方便的实验版本，但功能其实是可用的。<br>我这里用的同样是最新的gradle-experimental:0.6.0-beta5</p>\n<ul>\n<li>gradle 和 gradle编译工具 版本依赖的问题<br>注意 gradle编译工具的版本对 gradle版本有兼容依赖的关系, 反则没有。<br>也就是说 比如最新的gradle-experimental:0.6.0-beta5 只有gradle-2.10-all.zip才能适用。<br>但我用最新的gradle-2.10-all.zip，使用低版本的gradle-experimental:0.2.0没有影响，所以这点需要注意。</li>\n</ul>\n<p><strong>更新gradle设置可能需要下载新的文件，天朝网络可能被墙，请确保可以科学上网</strong></p>\n<h2 id=\"Step-3\"><a href=\"#Step-3\" class=\"headerlink\" title=\"Step 3\"></a>Step 3</h2><ul>\n<li>修改app的build.gradle 或者 library的build.gradle</li>\n</ul>\n<p>目前只有app工程，修改它的build.gradle文件DSL写法<br>不同版本gradle编译工具的DSL写法不同，这里用的是最新版本的0.6.0-beta5<br>如果是以前版本写法可以参考官方 <a href=\"https://sites.google.com/a/android.com/tools/tech-docs/new-build-system/gradle-experimental/0-4-0\">https://sites.google.com/a/android.com/tools/tech-docs/new-build-system/gradle-experimental/0-4-0</a></p>\n<p>修改之前的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: &apos;com.android.application&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">android &#123;</span><br><span class=\"line\">    compileSdkVersion 23</span><br><span class=\"line\">    buildToolsVersion &quot;23.0.2&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    defaultConfig &#123;</span><br><span class=\"line\">        applicationId &quot;com.example.android.tang.androidstudiojnidemoforndk10&quot;</span><br><span class=\"line\">        minSdkVersion 15</span><br><span class=\"line\">        targetSdkVersion 23</span><br><span class=\"line\">        versionCode 1</span><br><span class=\"line\">        versionName &quot;1.0&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    buildTypes &#123;</span><br><span class=\"line\">        release &#123;</span><br><span class=\"line\">            minifyEnabled false</span><br><span class=\"line\">            proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])</span><br><span class=\"line\">    testCompile &apos;junit:junit:4.12&apos;</span><br><span class=\"line\">    compile &apos;com.android.support:appcompat-v7:23.1.1&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>修改后的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: &quot;com.android.model.application&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">model &#123;</span><br><span class=\"line\">    android &#123;</span><br><span class=\"line\">        compileSdkVersion 23</span><br><span class=\"line\">        buildToolsVersion &quot;23.0.2&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        defaultConfig &#123;</span><br><span class=\"line\">            applicationId &quot;com.example.android.tang.androidstudiojnidemoforndk10&quot;</span><br><span class=\"line\">            minSdkVersion.apiLevel 15</span><br><span class=\"line\">            targetSdkVersion.apiLevel 23</span><br><span class=\"line\">            versionCode 1</span><br><span class=\"line\">            versionName &quot;1.0&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        buildTypes &#123;</span><br><span class=\"line\">            release &#123;</span><br><span class=\"line\">                minifyEnabled false</span><br><span class=\"line\">                proguardFiles.add(file(&quot;proguard-rules.pro&quot;))</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        sources &#123;</span><br><span class=\"line\">            main &#123;</span><br><span class=\"line\">                java &#123;</span><br><span class=\"line\">                    source &#123;</span><br><span class=\"line\">                        srcDir &quot;src&quot;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])</span><br><span class=\"line\">    testCompile &apos;junit:junit:4.12&apos;</span><br><span class=\"line\">    compile &apos;com.android.support:appcompat-v7:23.1.1&apos;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>DSL的改变:</li>\n</ul>\n<ol>\n<li>用com.android.model.application代替com.android.application</li>\n<li>如果创建aarlibrary用com.android.model.library代替com.android.library </li>\n<li>配置用model { } 块包装起来</li>\n<li>添加元素用add方法</li>\n</ol>\n<ul>\n<li>DSL的目前的局限性</li>\n</ul>\n<ol>\n<li>属性List只能接受唯一属性类型，比如你可以设置一个File使用String类型,但List<File>的类型列表只接受File对象。</li>\n<li>创建一个buildType或productFlavor需要调用create方法,只需要换一个名字，改变一个现有的Relese和Debug的buildType，</li>\n<li>DSL修改变量和任务功能很一般</li>\n</ol>\n<h2 id=\"Step-4-引入NDK\"><a href=\"#Step-4-引入NDK\" class=\"headerlink\" title=\"Step 4 引入NDK\"></a>Step 4 引入NDK</h2><ul>\n<li><p>加入ndk编译module<br>在app目录下的build.gradle 加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ndk &#123;                       </span><br><span class=\"line\">    moduleName &quot;native&quot;         //指定生成的lib，比如此时生成native.so</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>之后为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model &#123;</span><br><span class=\"line\">    android &#123;</span><br><span class=\"line\">        compileSdkVersion 23</span><br><span class=\"line\">        buildToolsVersion &quot;23.0.2&quot;</span><br><span class=\"line\">        ndk &#123;                       </span><br><span class=\"line\">            moduleName &quot;native&quot;         </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加入JNI目录</p>\n</li>\n</ul>\n<p>在目录app/src/main下创建jni目录，然后修改build.gradle 新增Source Set：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sources &#123;</span><br><span class=\"line\">    main &#123;</span><br><span class=\"line\">        jni &#123;</span><br><span class=\"line\">            source &#123;</span><br><span class=\"line\">                srcDir &quot;src&quot;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Step-5-代码中生成JNI代码\"><a href=\"#Step-5-代码中生成JNI代码\" class=\"headerlink\" title=\"Step 5 代码中生成JNI代码\"></a>Step 5 代码中生成JNI代码</h2><p>在activity中加载module native，加入本地方法test()</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MainActivity extends AppCompatActivity implements View.OnClickListener&#123;</span><br><span class=\"line\">    static &#123;</span><br><span class=\"line\">        System.loadLibrary(&quot;native&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public native String test();</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">        super.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\"></span><br><span class=\"line\">        findViewById(R.id.button).setOnClickListener(this);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void onClick(View v) &#123;</span><br><span class=\"line\">        Log.i(&quot;####&quot;,test());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>代码提示test()方法，自动生成jni代码</p>\n<p>／／图片</p>\n<p>编译运行，搞定！</p>\n<p>代码在： <a href=\"https://github.com/tangfuhao/AndroidStudioJNIDemoForNDK10\">https://github.com/tangfuhao/AndroidStudioJNIDemoForNDK10</a></p>\n"},{"title":"Android系统版本表速查","date":"2016-03-07T06:23:45.000Z","_content":"\n\n\n\n\n\n| Code name \t\t| Version API   | level \t\t\t\t|\n| ----------------- |:-------------:| ---------------------:|\n| (no code name)\t| 1.0\t\t\t| API level 1 \t\t\t|\n| (no code name)\t| 1.1\t     \t| API level 2 \t\t\t|\n| Cupcake\t\t\t| 1.5\t     \t| API level 3, NDK 1 \t|\n| Donut\t\t\t\t| 1.6\t     \t| API level 4, NDK 2 \t|\n| Eclair\t\t\t| 2.0\t     \t| API level 5 \t\t\t|\n| Eclair\t\t\t| 2.0.1\t     \t| API level 6 \t\t\t|\n| Eclair\t\t\t| 2.1\t     \t| API level 7, NDK 3 \t|\n| Froyo\t\t\t\t| 2.2.x\t     \t| API level 8, NDK 4 \t|\n| Gingerbread\t\t| 2.3 - 2.3.2\t| API level 9, NDK 5 \t|\n| Gingerbread\t\t| 2.3.3 - 2.3.7\t| API level 10 \t\t\t|\n| Honeycomb\t\t\t| 3.0\t     \t| API level 11 \t\t\t|\n| Honeycomb\t\t\t| 3.1\t     \t| API level 12, NDK 6 \t|\n| Honeycomb\t\t\t| 3.2.x\t     \t| API level 13 \t\t\t|\n| IceCreamSandwich\t| 4.0.1\t     \t| API level 14, NDK 7 \t|\n| IceCreamSandwich\t| 4.0.3\t     \t| API level 15 \t\t\t|\n\n\n\n\n\nTags列表如下：\n\nBuild\tTag\tNotes\nDRC83\tandroid-1.6_r1.1\tearliest Donut version, ADP1, ADP2\nDRC92\tandroid-1.6_r1.2\t \nDRD08\tandroid-1.6_r1.3\t \nDRD20\tandroid-1.6_r1.4\t \nDMD64\tandroid-1.6_r1.5\tlatest Donut version\nESD20\tandroid-2.0_r1\t\tearliest Eclair version\nESD56\tandroid-2.0.1_r1\t \nERD79\tandroid-2.1_r1\t\tNexus One\nERE27\tandroid-2.1_r2\t\tNexus One\nEPE54B\tandroid-2.1_r2.1p\tNexus One\nESE81\tandroid-2.1_r2.1s\t \nEPF21B\tandroid-2.1_r2.1p2\tlatest Eclair version\nFRF85B\tandroid-2.2_r1\t\tearliest Froyo version, Nexus One\nFRF91\tandroid-2.2_r1.1\tNexus One\nFRG01B\tandroid-2.2_r1.2\t \nFRG22D\tandroid-2.2_r1.3\t \nFRG83\tandroid-2.2.1_r1\tNexus One\nFRG83D\tandroid-2.2.1_r2\tNexus One\nFRG83G\tandroid-2.2.2_r1\tNexus One\nFRK76\tandroid-2.2.3_r1\t \nFRK76C\tandroid-2.2.3_r2\tlatest Froyo version\nGRH55\tandroid-2.3_r1\t\tearliest Gingerbread version, Nexus S\nGRH78\tandroid-2.3.1_r1\tNexus S\nGRH78C\tandroid-2.3.2_r1\tNexus S\nGRI40\tandroid-2.3.3_r1\tNexus One, Nexus S\nGRI54\tandroid-2.3.3_r1.1\tNexus S\nGRJ06D\tandroid-2.3.4_r0.9\tNexus S 4G\nGRJ22\tandroid-2.3.4_r1\tNexus One, Nexus S, Nexus S 4G\nGRJ90\tandroid-2.3.5_r1\tNexus S 4G\nGRK39C\tandroid-2.3.6_r0.9\tNexus S\nGRK39F\tandroid-2.3.6_r1\tNexus One, Nexus S\nGWK74\tandroid-2.3.7_r1\tlatest Gingerbread version, Nexus S 4G\nITL41D\tandroid-4.0.1_r1\tearliest IceCreamSandwich version, Galaxy Nexus\nITL41D\tandroid-4.0.1_r1.1\tGalaxy Nexus\nITL41F\tandroid-4.0.1_r1.2\tGalaxy Nexus\nICL53F\tandroid-4.0.2_r1\tGalaxy Nexus\nIML74K\tandroid-4.0.3_r1\tNexus S\nIML77\t \t\t\t\t\tlatest IceCreamSandwich version","source":"_posts/2016-03-07-Android系统版本表速查.md","raw":"---\ntitle: Android系统版本表速查\ndate: 2016-03-07 14:23:45\ntags:\n---\n\n\n\n\n\n\n| Code name \t\t| Version API   | level \t\t\t\t|\n| ----------------- |:-------------:| ---------------------:|\n| (no code name)\t| 1.0\t\t\t| API level 1 \t\t\t|\n| (no code name)\t| 1.1\t     \t| API level 2 \t\t\t|\n| Cupcake\t\t\t| 1.5\t     \t| API level 3, NDK 1 \t|\n| Donut\t\t\t\t| 1.6\t     \t| API level 4, NDK 2 \t|\n| Eclair\t\t\t| 2.0\t     \t| API level 5 \t\t\t|\n| Eclair\t\t\t| 2.0.1\t     \t| API level 6 \t\t\t|\n| Eclair\t\t\t| 2.1\t     \t| API level 7, NDK 3 \t|\n| Froyo\t\t\t\t| 2.2.x\t     \t| API level 8, NDK 4 \t|\n| Gingerbread\t\t| 2.3 - 2.3.2\t| API level 9, NDK 5 \t|\n| Gingerbread\t\t| 2.3.3 - 2.3.7\t| API level 10 \t\t\t|\n| Honeycomb\t\t\t| 3.0\t     \t| API level 11 \t\t\t|\n| Honeycomb\t\t\t| 3.1\t     \t| API level 12, NDK 6 \t|\n| Honeycomb\t\t\t| 3.2.x\t     \t| API level 13 \t\t\t|\n| IceCreamSandwich\t| 4.0.1\t     \t| API level 14, NDK 7 \t|\n| IceCreamSandwich\t| 4.0.3\t     \t| API level 15 \t\t\t|\n\n\n\n\n\nTags列表如下：\n\nBuild\tTag\tNotes\nDRC83\tandroid-1.6_r1.1\tearliest Donut version, ADP1, ADP2\nDRC92\tandroid-1.6_r1.2\t \nDRD08\tandroid-1.6_r1.3\t \nDRD20\tandroid-1.6_r1.4\t \nDMD64\tandroid-1.6_r1.5\tlatest Donut version\nESD20\tandroid-2.0_r1\t\tearliest Eclair version\nESD56\tandroid-2.0.1_r1\t \nERD79\tandroid-2.1_r1\t\tNexus One\nERE27\tandroid-2.1_r2\t\tNexus One\nEPE54B\tandroid-2.1_r2.1p\tNexus One\nESE81\tandroid-2.1_r2.1s\t \nEPF21B\tandroid-2.1_r2.1p2\tlatest Eclair version\nFRF85B\tandroid-2.2_r1\t\tearliest Froyo version, Nexus One\nFRF91\tandroid-2.2_r1.1\tNexus One\nFRG01B\tandroid-2.2_r1.2\t \nFRG22D\tandroid-2.2_r1.3\t \nFRG83\tandroid-2.2.1_r1\tNexus One\nFRG83D\tandroid-2.2.1_r2\tNexus One\nFRG83G\tandroid-2.2.2_r1\tNexus One\nFRK76\tandroid-2.2.3_r1\t \nFRK76C\tandroid-2.2.3_r2\tlatest Froyo version\nGRH55\tandroid-2.3_r1\t\tearliest Gingerbread version, Nexus S\nGRH78\tandroid-2.3.1_r1\tNexus S\nGRH78C\tandroid-2.3.2_r1\tNexus S\nGRI40\tandroid-2.3.3_r1\tNexus One, Nexus S\nGRI54\tandroid-2.3.3_r1.1\tNexus S\nGRJ06D\tandroid-2.3.4_r0.9\tNexus S 4G\nGRJ22\tandroid-2.3.4_r1\tNexus One, Nexus S, Nexus S 4G\nGRJ90\tandroid-2.3.5_r1\tNexus S 4G\nGRK39C\tandroid-2.3.6_r0.9\tNexus S\nGRK39F\tandroid-2.3.6_r1\tNexus One, Nexus S\nGWK74\tandroid-2.3.7_r1\tlatest Gingerbread version, Nexus S 4G\nITL41D\tandroid-4.0.1_r1\tearliest IceCreamSandwich version, Galaxy Nexus\nITL41D\tandroid-4.0.1_r1.1\tGalaxy Nexus\nITL41F\tandroid-4.0.1_r1.2\tGalaxy Nexus\nICL53F\tandroid-4.0.2_r1\tGalaxy Nexus\nIML74K\tandroid-4.0.3_r1\tNexus S\nIML77\t \t\t\t\t\tlatest IceCreamSandwich version","slug":"Android系统版本表速查","published":1,"updated":"2016-03-07T11:13:22.000Z","_id":"cilhs08530003ggd5xzs4dnl0","comments":1,"layout":"post","photos":[],"link":"","content":"<table>\n<thead>\n<tr>\n<th>Code name</th>\n<th style=\"text-align:center\">Version API</th>\n<th style=\"text-align:right\">level</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>(no code name)</td>\n<td style=\"text-align:center\">1.0</td>\n<td style=\"text-align:right\">API level 1</td>\n</tr>\n<tr>\n<td>(no code name)</td>\n<td style=\"text-align:center\">1.1</td>\n<td style=\"text-align:right\">API level 2</td>\n</tr>\n<tr>\n<td>Cupcake</td>\n<td style=\"text-align:center\">1.5</td>\n<td style=\"text-align:right\">API level 3, NDK 1</td>\n</tr>\n<tr>\n<td>Donut</td>\n<td style=\"text-align:center\">1.6</td>\n<td style=\"text-align:right\">API level 4, NDK 2</td>\n</tr>\n<tr>\n<td>Eclair</td>\n<td style=\"text-align:center\">2.0</td>\n<td style=\"text-align:right\">API level 5</td>\n</tr>\n<tr>\n<td>Eclair</td>\n<td style=\"text-align:center\">2.0.1</td>\n<td style=\"text-align:right\">API level 6</td>\n</tr>\n<tr>\n<td>Eclair</td>\n<td style=\"text-align:center\">2.1</td>\n<td style=\"text-align:right\">API level 7, NDK 3</td>\n</tr>\n<tr>\n<td>Froyo</td>\n<td style=\"text-align:center\">2.2.x</td>\n<td style=\"text-align:right\">API level 8, NDK 4</td>\n</tr>\n<tr>\n<td>Gingerbread</td>\n<td style=\"text-align:center\">2.3 - 2.3.2</td>\n<td style=\"text-align:right\">API level 9, NDK 5</td>\n</tr>\n<tr>\n<td>Gingerbread</td>\n<td style=\"text-align:center\">2.3.3 - 2.3.7</td>\n<td style=\"text-align:right\">API level 10</td>\n</tr>\n<tr>\n<td>Honeycomb</td>\n<td style=\"text-align:center\">3.0</td>\n<td style=\"text-align:right\">API level 11</td>\n</tr>\n<tr>\n<td>Honeycomb</td>\n<td style=\"text-align:center\">3.1</td>\n<td style=\"text-align:right\">API level 12, NDK 6</td>\n</tr>\n<tr>\n<td>Honeycomb</td>\n<td style=\"text-align:center\">3.2.x</td>\n<td style=\"text-align:right\">API level 13</td>\n</tr>\n<tr>\n<td>IceCreamSandwich</td>\n<td style=\"text-align:center\">4.0.1</td>\n<td style=\"text-align:right\">API level 14, NDK 7</td>\n</tr>\n<tr>\n<td>IceCreamSandwich</td>\n<td style=\"text-align:center\">4.0.3</td>\n<td style=\"text-align:right\">API level 15</td>\n</tr>\n</tbody>\n</table>\n<p>Tags列表如下：</p>\n<p>Build    Tag    Notes<br>DRC83    android-1.6_r1.1    earliest Donut version, ADP1, ADP2<br>DRC92    android-1.6_r1.2<br>DRD08    android-1.6_r1.3<br>DRD20    android-1.6_r1.4<br>DMD64    android-1.6_r1.5    latest Donut version<br>ESD20    android-2.0_r1        earliest Eclair version<br>ESD56    android-2.0.1_r1<br>ERD79    android-2.1_r1        Nexus One<br>ERE27    android-2.1_r2        Nexus One<br>EPE54B    android-2.1_r2.1p    Nexus One<br>ESE81    android-2.1_r2.1s<br>EPF21B    android-2.1_r2.1p2    latest Eclair version<br>FRF85B    android-2.2_r1        earliest Froyo version, Nexus One<br>FRF91    android-2.2_r1.1    Nexus One<br>FRG01B    android-2.2_r1.2<br>FRG22D    android-2.2_r1.3<br>FRG83    android-2.2.1_r1    Nexus One<br>FRG83D    android-2.2.1_r2    Nexus One<br>FRG83G    android-2.2.2_r1    Nexus One<br>FRK76    android-2.2.3_r1<br>FRK76C    android-2.2.3_r2    latest Froyo version<br>GRH55    android-2.3_r1        earliest Gingerbread version, Nexus S<br>GRH78    android-2.3.1_r1    Nexus S<br>GRH78C    android-2.3.2_r1    Nexus S<br>GRI40    android-2.3.3_r1    Nexus One, Nexus S<br>GRI54    android-2.3.3_r1.1    Nexus S<br>GRJ06D    android-2.3.4_r0.9    Nexus S 4G<br>GRJ22    android-2.3.4_r1    Nexus One, Nexus S, Nexus S 4G<br>GRJ90    android-2.3.5_r1    Nexus S 4G<br>GRK39C    android-2.3.6_r0.9    Nexus S<br>GRK39F    android-2.3.6_r1    Nexus One, Nexus S<br>GWK74    android-2.3.7_r1    latest Gingerbread version, Nexus S 4G<br>ITL41D    android-4.0.1_r1    earliest IceCreamSandwich version, Galaxy Nexus<br>ITL41D    android-4.0.1_r1.1    Galaxy Nexus<br>ITL41F    android-4.0.1_r1.2    Galaxy Nexus<br>ICL53F    android-4.0.2_r1    Galaxy Nexus<br>IML74K    android-4.0.3_r1    Nexus S<br>IML77                         latest IceCreamSandwich version</p>\n","excerpt":"","more":"<table>\n<thead>\n<tr>\n<th>Code name</th>\n<th style=\"text-align:center\">Version API</th>\n<th style=\"text-align:right\">level</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>(no code name)</td>\n<td style=\"text-align:center\">1.0</td>\n<td style=\"text-align:right\">API level 1</td>\n</tr>\n<tr>\n<td>(no code name)</td>\n<td style=\"text-align:center\">1.1</td>\n<td style=\"text-align:right\">API level 2</td>\n</tr>\n<tr>\n<td>Cupcake</td>\n<td style=\"text-align:center\">1.5</td>\n<td style=\"text-align:right\">API level 3, NDK 1</td>\n</tr>\n<tr>\n<td>Donut</td>\n<td style=\"text-align:center\">1.6</td>\n<td style=\"text-align:right\">API level 4, NDK 2</td>\n</tr>\n<tr>\n<td>Eclair</td>\n<td style=\"text-align:center\">2.0</td>\n<td style=\"text-align:right\">API level 5</td>\n</tr>\n<tr>\n<td>Eclair</td>\n<td style=\"text-align:center\">2.0.1</td>\n<td style=\"text-align:right\">API level 6</td>\n</tr>\n<tr>\n<td>Eclair</td>\n<td style=\"text-align:center\">2.1</td>\n<td style=\"text-align:right\">API level 7, NDK 3</td>\n</tr>\n<tr>\n<td>Froyo</td>\n<td style=\"text-align:center\">2.2.x</td>\n<td style=\"text-align:right\">API level 8, NDK 4</td>\n</tr>\n<tr>\n<td>Gingerbread</td>\n<td style=\"text-align:center\">2.3 - 2.3.2</td>\n<td style=\"text-align:right\">API level 9, NDK 5</td>\n</tr>\n<tr>\n<td>Gingerbread</td>\n<td style=\"text-align:center\">2.3.3 - 2.3.7</td>\n<td style=\"text-align:right\">API level 10</td>\n</tr>\n<tr>\n<td>Honeycomb</td>\n<td style=\"text-align:center\">3.0</td>\n<td style=\"text-align:right\">API level 11</td>\n</tr>\n<tr>\n<td>Honeycomb</td>\n<td style=\"text-align:center\">3.1</td>\n<td style=\"text-align:right\">API level 12, NDK 6</td>\n</tr>\n<tr>\n<td>Honeycomb</td>\n<td style=\"text-align:center\">3.2.x</td>\n<td style=\"text-align:right\">API level 13</td>\n</tr>\n<tr>\n<td>IceCreamSandwich</td>\n<td style=\"text-align:center\">4.0.1</td>\n<td style=\"text-align:right\">API level 14, NDK 7</td>\n</tr>\n<tr>\n<td>IceCreamSandwich</td>\n<td style=\"text-align:center\">4.0.3</td>\n<td style=\"text-align:right\">API level 15</td>\n</tr>\n</tbody>\n</table>\n<p>Tags列表如下：</p>\n<p>Build    Tag    Notes<br>DRC83    android-1.6_r1.1    earliest Donut version, ADP1, ADP2<br>DRC92    android-1.6_r1.2<br>DRD08    android-1.6_r1.3<br>DRD20    android-1.6_r1.4<br>DMD64    android-1.6_r1.5    latest Donut version<br>ESD20    android-2.0_r1        earliest Eclair version<br>ESD56    android-2.0.1_r1<br>ERD79    android-2.1_r1        Nexus One<br>ERE27    android-2.1_r2        Nexus One<br>EPE54B    android-2.1_r2.1p    Nexus One<br>ESE81    android-2.1_r2.1s<br>EPF21B    android-2.1_r2.1p2    latest Eclair version<br>FRF85B    android-2.2_r1        earliest Froyo version, Nexus One<br>FRF91    android-2.2_r1.1    Nexus One<br>FRG01B    android-2.2_r1.2<br>FRG22D    android-2.2_r1.3<br>FRG83    android-2.2.1_r1    Nexus One<br>FRG83D    android-2.2.1_r2    Nexus One<br>FRG83G    android-2.2.2_r1    Nexus One<br>FRK76    android-2.2.3_r1<br>FRK76C    android-2.2.3_r2    latest Froyo version<br>GRH55    android-2.3_r1        earliest Gingerbread version, Nexus S<br>GRH78    android-2.3.1_r1    Nexus S<br>GRH78C    android-2.3.2_r1    Nexus S<br>GRI40    android-2.3.3_r1    Nexus One, Nexus S<br>GRI54    android-2.3.3_r1.1    Nexus S<br>GRJ06D    android-2.3.4_r0.9    Nexus S 4G<br>GRJ22    android-2.3.4_r1    Nexus One, Nexus S, Nexus S 4G<br>GRJ90    android-2.3.5_r1    Nexus S 4G<br>GRK39C    android-2.3.6_r0.9    Nexus S<br>GRK39F    android-2.3.6_r1    Nexus One, Nexus S<br>GWK74    android-2.3.7_r1    latest Gingerbread version, Nexus S 4G<br>ITL41D    android-4.0.1_r1    earliest IceCreamSandwich version, Galaxy Nexus<br>ITL41D    android-4.0.1_r1.1    Galaxy Nexus<br>ITL41F    android-4.0.1_r1.2    Galaxy Nexus<br>ICL53F    android-4.0.2_r1    Galaxy Nexus<br>IML74K    android-4.0.3_r1    Nexus S<br>IML77                         latest IceCreamSandwich version</p>\n"},{"title":"Android Native sqlite3 用法整理教程 NDK ","date":"2016-03-03T09:27:18.000Z","_content":"\n\n\n\n{% codeblock %}\n#include <stdio.h> \n#include <stdlib.h> \n#include <string.h>\n#include \"sqlite3.h\"\n \n//\n//typedef int (*sqlite3_callback)( \n//    void* data,       /* Data provided in the 4th argument of sqlite3_exec() */\n//    int ncols,        /* The number of columns in row */\n//    char** values,    /* An array of strings representing fields in the row */\n//    char** headers    /* An array of strings representing column names */\n//); \n \nint callback(void* data, int ncols, char** values, char** headers)\n{\n    int i;\n    int len =0;\n    int ll=0;\n    for(i=0; i < ncols; i++)\n    {\n        if(strlen(headers[i])>len)\n            len = strlen(headers[i]);\n    }\n     \n    for(i=0; i < ncols; i++) \n    {\n        ll = len-strlen(headers[i]);\n        while(ll)\n        {\n            fprintf(stdout,\" \");\n            --ll;\n        }\n        fprintf(stdout, \"%s: %s\\n\", headers[i], values[i]);\n    }\n \n    fprintf(stdout, \"\\n\");\n    return 0;\n}\n \nint search_by_callback(const char* db_name, const char* sql_cmd) \n{  \n    int i = 0 ;  \n    int j = 0 ;  \n    int nrow = 0, ncolumn = 0;  \n    char **azResult; //二维数组存放结果  \n    sqlite3 *db=NULL;  \n    char *zErrMsg = 0; \n    int rc;\n    int len=0;\n \n    if(access(db_name, 0) == -1)\n    {\n        fprintf(stderr, \"%s not found\\n\", db_name);  \n        return -1;  \n    }\n     \n    rc = sqlite3_open(db_name, &db);\n \n    if( rc != SQLITE_OK)\n    {  \n        fprintf(stderr, \"%s open failed: %s\\n\", db_name,sqlite3_errmsg(db));  \n        sqlite3_close(db);  \n        return -1;  \n    }  \n \n    //查询数据  \n    rc = sqlite3_exec( db,sql_cmd, callback, NULL, &zErrMsg );\n    if( rc != SQLITE_OK)\n    {  \n        fprintf(stderr, \"%s %s: %s\\n\", db_name,sql_cmd, sqlite3_errmsg(db));  \n        if(zErrMsg)\n        {\n            fprintf(stderr,\"ErrMsg = %s \\n\", zErrMsg); \n            sqlite3_free(zErrMsg);\n        }\n        sqlite3_close(db);  \n        return -1;  \n    }\n     \n    if(zErrMsg)\n    {\n        sqlite3_free(zErrMsg);\n    }\n \n    //关闭数据库  \n    sqlite3_close(db); \n    return 0;  \n \n}\n \nint search_by_table(const char* db_name, const char* sql_cmd) \n{  \n    int i = 0 ;  \n    int j = 0 ;  \n    int nrow = 0, ncolumn = 0;  \n    char **azResult; //二维数组存放结果  \n    sqlite3 *db=NULL;  \n    char *zErrMsg = 0; \n    int rc;\n    int len=0;\n \n    if(access(db_name, 0) == -1)\n    {\n        fprintf(stderr, \"%s not found\\n\", db_name);  \n        return -1;  \n    }\n     \n    rc = sqlite3_open(db_name, &db);\n \n    if( rc != SQLITE_OK)\n    {  \n        fprintf(stderr, \"%s open failed: %s\\n\", db_name,sqlite3_errmsg(db));  \n        sqlite3_close(db);  \n        return -1;  \n    }  \n \n    //查询数据  \n    rc = sqlite3_get_table( db , sql_cmd, &azResult , &nrow , &ncolumn , &zErrMsg );  \n    if( rc != SQLITE_OK)\n    {  \n        fprintf(stderr, \"%s %s: %s\\n\", db_name,sql_cmd, sqlite3_errmsg(db));  \n        if(zErrMsg)\n            fprintf(stderr,\"ErrMsg = %s \\n\", zErrMsg); \n        sqlite3_free_table( azResult ); \n        sqlite3_close(db);  \n        return -1;  \n    }  \n \n    for(j=0; j < ncolumn; j++)\n    {\n        if(strlen(azResult[j])>len)\n            len = strlen(azResult[j]);\n    }\n \n    //从第0索引到第 nColumn - 1索引都是字段名称\n    //从第 nColumn 索引开始，后面都是字段值\n    for( i = 0 ; i < nrow; i++ )\n    {\n        for(j=0; j < ncolumn; j++)\n        {\n            int ll = (len- strlen(azResult[j]));\n            while(ll)\n            {\n                printf(\" \");\n                --ll;\n            }\n            printf( \"%s: %s\\n\", azResult[j], azResult[(i+1)*ncolumn+j]);\n        }\n        printf(\"\\n\");\n    }\n \n#if 0   \n    for( j = 0 ; j < ncolumn; j++ )\n    {\n        printf( \"%s \", azResult[j]);\n    }\n    printf( \"\\n\");  \n \n    for( i=ncolumn ; i<( nrow + 1 ) * ncolumn ; i++ )\n    {\n        if(((i-ncolumn+1)%ncolumn) ==0)\n            printf( \"%s\\n\",azResult[i]);\n        else\n            printf( \"%s \",azResult[i] ); \n    }\n#endif\n    //与sqlite3_get_table对应，释放掉  azResult 的内存空间  \n    sqlite3_free_table( azResult ); \n    //关闭数据库  \n    sqlite3_close(db); \n    return 0;  \n \n} \n \nint search_by_stmt(const char* db_name, const char* sql_cmd) \n{  \n    sqlite3 *db=NULL;  \n    sqlite3_stmt* stmt = 0;\n    int ncolumn = 0;\n    const char *column_name;\n    int vtype , i;\n    int rc;\n \n    if(access(db_name, 0) == -1)\n    {\n        fprintf(stderr, \"%s not found\\n\", db_name);  \n        return -1;  \n    }\n     \n    rc = sqlite3_open(db_name, &db);\n \n    if( rc != SQLITE_OK)\n    {  \n        fprintf(stderr, \"%s open failed: %s\\n\", db_name,sqlite3_errmsg(db));  \n        sqlite3_close(db);  \n        return -1;  \n    }  \n \n    //查询数据  \n    rc = sqlite3_prepare_v2(db, sql_cmd, -1, &stmt, 0);\n    if (rc != SQLITE_OK)\n    {\n        fprintf(stderr, \"%s %s: %s\\n\", db_name,sql_cmd, sqlite3_errmsg(db));  \n        sqlite3_close(db);  \n        return -1;  \n    }\n \n    ncolumn = sqlite3_column_count(stmt);\n \n    while (sqlite3_step(stmt) == SQLITE_ROW)\n    {   \n        for(i = 0 ; i < ncolumn ; i++ )\n        {\n            vtype = sqlite3_column_type(stmt , i);\n            column_name = sqlite3_column_name(stmt , i);\n            switch( vtype )\n            {\n              case SQLITE_NULL:\n                  fprintf(stdout, \"%s: null\\n\", column_name);   \n                break;\n              case SQLITE_INTEGER:\n                  fprintf(stdout, \"%s: %d\\n\", column_name,sqlite3_column_int(stmt,i));  \n                break;\n              case SQLITE_FLOAT:\n                  fprintf(stdout, \"%s: %f\\n\", column_name,sqlite3_column_double(stmt,i));   \n                break;\n              case SQLITE_BLOB: /* arguably fall through... */\n                  fprintf(stdout, \"%s: BLOB\\n\", column_name);   \n                break;\n              case SQLITE_TEXT: \n                  fprintf(stdout, \"%s: %s\\n\", column_name,sqlite3_column_text(stmt,i)); \n                break;\n              default:\n                  fprintf(stdout, \"%s: ERROR [%s]\\n\", column_name, sqlite3_errmsg(db)); \n                break;\n            }\n        }\n    }\n \n    sqlite3_finalize(stmt);\n \n    //关闭数据库  \n    sqlite3_close(db); \n    return 0;  \n \n}\n \n \n \nint main(int argc, char* argv[])\n{\n    int i=0;\n    if(argc != 4)\n    {\n        fprintf(stderr, \"usage: %s [table/callback/stmt] <db_name> <sql_cmd>\\r\\n\", argv[0]);\n        return -1;\n    }\n \n    if((strcmp(argv[1],\"table\") ==0))\n        search_by_table(argv[2],argv[3]);\n    else if((strcmp(argv[1],\"callback\") ==0))\n        search_by_callback(argv[2],argv[3]);\n    else\n        search_by_stmt(argv[2],argv[3]);\n    return 0;\n}\n\n{% endcodeblock %}","source":"_posts/Android-Native-sqlite3-简单用法整理教程-NDK.md","raw":"---\ntitle: 'Android Native sqlite3 用法整理教程 NDK '\ndate: 2016-03-03 17:27:18\ncategories: android native\ntags: [android,sqlite3,c/c++,ndk]\n---\n\n\n\n\n{% codeblock %}\n#include <stdio.h> \n#include <stdlib.h> \n#include <string.h>\n#include \"sqlite3.h\"\n \n//\n//typedef int (*sqlite3_callback)( \n//    void* data,       /* Data provided in the 4th argument of sqlite3_exec() */\n//    int ncols,        /* The number of columns in row */\n//    char** values,    /* An array of strings representing fields in the row */\n//    char** headers    /* An array of strings representing column names */\n//); \n \nint callback(void* data, int ncols, char** values, char** headers)\n{\n    int i;\n    int len =0;\n    int ll=0;\n    for(i=0; i < ncols; i++)\n    {\n        if(strlen(headers[i])>len)\n            len = strlen(headers[i]);\n    }\n     \n    for(i=0; i < ncols; i++) \n    {\n        ll = len-strlen(headers[i]);\n        while(ll)\n        {\n            fprintf(stdout,\" \");\n            --ll;\n        }\n        fprintf(stdout, \"%s: %s\\n\", headers[i], values[i]);\n    }\n \n    fprintf(stdout, \"\\n\");\n    return 0;\n}\n \nint search_by_callback(const char* db_name, const char* sql_cmd) \n{  \n    int i = 0 ;  \n    int j = 0 ;  \n    int nrow = 0, ncolumn = 0;  \n    char **azResult; //二维数组存放结果  \n    sqlite3 *db=NULL;  \n    char *zErrMsg = 0; \n    int rc;\n    int len=0;\n \n    if(access(db_name, 0) == -1)\n    {\n        fprintf(stderr, \"%s not found\\n\", db_name);  \n        return -1;  \n    }\n     \n    rc = sqlite3_open(db_name, &db);\n \n    if( rc != SQLITE_OK)\n    {  \n        fprintf(stderr, \"%s open failed: %s\\n\", db_name,sqlite3_errmsg(db));  \n        sqlite3_close(db);  \n        return -1;  \n    }  \n \n    //查询数据  \n    rc = sqlite3_exec( db,sql_cmd, callback, NULL, &zErrMsg );\n    if( rc != SQLITE_OK)\n    {  \n        fprintf(stderr, \"%s %s: %s\\n\", db_name,sql_cmd, sqlite3_errmsg(db));  \n        if(zErrMsg)\n        {\n            fprintf(stderr,\"ErrMsg = %s \\n\", zErrMsg); \n            sqlite3_free(zErrMsg);\n        }\n        sqlite3_close(db);  \n        return -1;  \n    }\n     \n    if(zErrMsg)\n    {\n        sqlite3_free(zErrMsg);\n    }\n \n    //关闭数据库  \n    sqlite3_close(db); \n    return 0;  \n \n}\n \nint search_by_table(const char* db_name, const char* sql_cmd) \n{  \n    int i = 0 ;  \n    int j = 0 ;  \n    int nrow = 0, ncolumn = 0;  \n    char **azResult; //二维数组存放结果  \n    sqlite3 *db=NULL;  \n    char *zErrMsg = 0; \n    int rc;\n    int len=0;\n \n    if(access(db_name, 0) == -1)\n    {\n        fprintf(stderr, \"%s not found\\n\", db_name);  \n        return -1;  \n    }\n     \n    rc = sqlite3_open(db_name, &db);\n \n    if( rc != SQLITE_OK)\n    {  \n        fprintf(stderr, \"%s open failed: %s\\n\", db_name,sqlite3_errmsg(db));  \n        sqlite3_close(db);  \n        return -1;  \n    }  \n \n    //查询数据  \n    rc = sqlite3_get_table( db , sql_cmd, &azResult , &nrow , &ncolumn , &zErrMsg );  \n    if( rc != SQLITE_OK)\n    {  \n        fprintf(stderr, \"%s %s: %s\\n\", db_name,sql_cmd, sqlite3_errmsg(db));  \n        if(zErrMsg)\n            fprintf(stderr,\"ErrMsg = %s \\n\", zErrMsg); \n        sqlite3_free_table( azResult ); \n        sqlite3_close(db);  \n        return -1;  \n    }  \n \n    for(j=0; j < ncolumn; j++)\n    {\n        if(strlen(azResult[j])>len)\n            len = strlen(azResult[j]);\n    }\n \n    //从第0索引到第 nColumn - 1索引都是字段名称\n    //从第 nColumn 索引开始，后面都是字段值\n    for( i = 0 ; i < nrow; i++ )\n    {\n        for(j=0; j < ncolumn; j++)\n        {\n            int ll = (len- strlen(azResult[j]));\n            while(ll)\n            {\n                printf(\" \");\n                --ll;\n            }\n            printf( \"%s: %s\\n\", azResult[j], azResult[(i+1)*ncolumn+j]);\n        }\n        printf(\"\\n\");\n    }\n \n#if 0   \n    for( j = 0 ; j < ncolumn; j++ )\n    {\n        printf( \"%s \", azResult[j]);\n    }\n    printf( \"\\n\");  \n \n    for( i=ncolumn ; i<( nrow + 1 ) * ncolumn ; i++ )\n    {\n        if(((i-ncolumn+1)%ncolumn) ==0)\n            printf( \"%s\\n\",azResult[i]);\n        else\n            printf( \"%s \",azResult[i] ); \n    }\n#endif\n    //与sqlite3_get_table对应，释放掉  azResult 的内存空间  \n    sqlite3_free_table( azResult ); \n    //关闭数据库  \n    sqlite3_close(db); \n    return 0;  \n \n} \n \nint search_by_stmt(const char* db_name, const char* sql_cmd) \n{  \n    sqlite3 *db=NULL;  \n    sqlite3_stmt* stmt = 0;\n    int ncolumn = 0;\n    const char *column_name;\n    int vtype , i;\n    int rc;\n \n    if(access(db_name, 0) == -1)\n    {\n        fprintf(stderr, \"%s not found\\n\", db_name);  \n        return -1;  \n    }\n     \n    rc = sqlite3_open(db_name, &db);\n \n    if( rc != SQLITE_OK)\n    {  \n        fprintf(stderr, \"%s open failed: %s\\n\", db_name,sqlite3_errmsg(db));  \n        sqlite3_close(db);  \n        return -1;  \n    }  \n \n    //查询数据  \n    rc = sqlite3_prepare_v2(db, sql_cmd, -1, &stmt, 0);\n    if (rc != SQLITE_OK)\n    {\n        fprintf(stderr, \"%s %s: %s\\n\", db_name,sql_cmd, sqlite3_errmsg(db));  \n        sqlite3_close(db);  \n        return -1;  \n    }\n \n    ncolumn = sqlite3_column_count(stmt);\n \n    while (sqlite3_step(stmt) == SQLITE_ROW)\n    {   \n        for(i = 0 ; i < ncolumn ; i++ )\n        {\n            vtype = sqlite3_column_type(stmt , i);\n            column_name = sqlite3_column_name(stmt , i);\n            switch( vtype )\n            {\n              case SQLITE_NULL:\n                  fprintf(stdout, \"%s: null\\n\", column_name);   \n                break;\n              case SQLITE_INTEGER:\n                  fprintf(stdout, \"%s: %d\\n\", column_name,sqlite3_column_int(stmt,i));  \n                break;\n              case SQLITE_FLOAT:\n                  fprintf(stdout, \"%s: %f\\n\", column_name,sqlite3_column_double(stmt,i));   \n                break;\n              case SQLITE_BLOB: /* arguably fall through... */\n                  fprintf(stdout, \"%s: BLOB\\n\", column_name);   \n                break;\n              case SQLITE_TEXT: \n                  fprintf(stdout, \"%s: %s\\n\", column_name,sqlite3_column_text(stmt,i)); \n                break;\n              default:\n                  fprintf(stdout, \"%s: ERROR [%s]\\n\", column_name, sqlite3_errmsg(db)); \n                break;\n            }\n        }\n    }\n \n    sqlite3_finalize(stmt);\n \n    //关闭数据库  \n    sqlite3_close(db); \n    return 0;  \n \n}\n \n \n \nint main(int argc, char* argv[])\n{\n    int i=0;\n    if(argc != 4)\n    {\n        fprintf(stderr, \"usage: %s [table/callback/stmt] <db_name> <sql_cmd>\\r\\n\", argv[0]);\n        return -1;\n    }\n \n    if((strcmp(argv[1],\"table\") ==0))\n        search_by_table(argv[2],argv[3]);\n    else if((strcmp(argv[1],\"callback\") ==0))\n        search_by_callback(argv[2],argv[3]);\n    else\n        search_by_stmt(argv[2],argv[3]);\n    return 0;\n}\n\n{% endcodeblock %}","slug":"Android-Native-sqlite3-简单用法整理教程-NDK","published":1,"updated":"2016-03-07T11:33:22.000Z","_id":"cilhs08570005ggd5mii1sdcd","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt; </span><br><span class=\"line\">#include &lt;stdlib.h&gt; </span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">#include &quot;sqlite3.h&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\">//</span><br><span class=\"line\">//typedef int (*sqlite3_callback)( </span><br><span class=\"line\">//    void* data,       /* Data provided in the 4th argument of sqlite3_exec() */</span><br><span class=\"line\">//    int ncols,        /* The number of columns in row */</span><br><span class=\"line\">//    char** values,    /* An array of strings representing fields in the row */</span><br><span class=\"line\">//    char** headers    /* An array of strings representing column names */</span><br><span class=\"line\">//); </span><br><span class=\"line\"> </span><br><span class=\"line\">int callback(void* data, int ncols, char** values, char** headers)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int i;</span><br><span class=\"line\">    int len =0;</span><br><span class=\"line\">    int ll=0;</span><br><span class=\"line\">    for(i=0; i &lt; ncols; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(strlen(headers[i])&gt;len)</span><br><span class=\"line\">            len = strlen(headers[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    for(i=0; i &lt; ncols; i++) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ll = len-strlen(headers[i]);</span><br><span class=\"line\">        while(ll)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            fprintf(stdout,&quot; &quot;);</span><br><span class=\"line\">            --ll;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fprintf(stdout, &quot;%s: %s\\n&quot;, headers[i], values[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    fprintf(stdout, &quot;\\n&quot;);</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">int search_by_callback(const char* db_name, const char* sql_cmd) </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    int i = 0 ;  </span><br><span class=\"line\">    int j = 0 ;  </span><br><span class=\"line\">    int nrow = 0, ncolumn = 0;  </span><br><span class=\"line\">    char **azResult; //二维数组存放结果  </span><br><span class=\"line\">    sqlite3 *db=NULL;  </span><br><span class=\"line\">    char *zErrMsg = 0; </span><br><span class=\"line\">    int rc;</span><br><span class=\"line\">    int len=0;</span><br><span class=\"line\"> </span><br><span class=\"line\">    if(access(db_name, 0) == -1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fprintf(stderr, &quot;%s not found\\n&quot;, db_name);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    rc = sqlite3_open(db_name, &amp;db);</span><br><span class=\"line\"> </span><br><span class=\"line\">    if( rc != SQLITE_OK)</span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        fprintf(stderr, &quot;%s open failed: %s\\n&quot;, db_name,sqlite3_errmsg(db));  </span><br><span class=\"line\">        sqlite3_close(db);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"> </span><br><span class=\"line\">    //查询数据  </span><br><span class=\"line\">    rc = sqlite3_exec( db,sql_cmd, callback, NULL, &amp;zErrMsg );</span><br><span class=\"line\">    if( rc != SQLITE_OK)</span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        fprintf(stderr, &quot;%s %s: %s\\n&quot;, db_name,sql_cmd, sqlite3_errmsg(db));  </span><br><span class=\"line\">        if(zErrMsg)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            fprintf(stderr,&quot;ErrMsg = %s \\n&quot;, zErrMsg); </span><br><span class=\"line\">            sqlite3_free(zErrMsg);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sqlite3_close(db);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    if(zErrMsg)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sqlite3_free(zErrMsg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    //关闭数据库  </span><br><span class=\"line\">    sqlite3_close(db); </span><br><span class=\"line\">    return 0;  </span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">int search_by_table(const char* db_name, const char* sql_cmd) </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    int i = 0 ;  </span><br><span class=\"line\">    int j = 0 ;  </span><br><span class=\"line\">    int nrow = 0, ncolumn = 0;  </span><br><span class=\"line\">    char **azResult; //二维数组存放结果  </span><br><span class=\"line\">    sqlite3 *db=NULL;  </span><br><span class=\"line\">    char *zErrMsg = 0; </span><br><span class=\"line\">    int rc;</span><br><span class=\"line\">    int len=0;</span><br><span class=\"line\"> </span><br><span class=\"line\">    if(access(db_name, 0) == -1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fprintf(stderr, &quot;%s not found\\n&quot;, db_name);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    rc = sqlite3_open(db_name, &amp;db);</span><br><span class=\"line\"> </span><br><span class=\"line\">    if( rc != SQLITE_OK)</span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        fprintf(stderr, &quot;%s open failed: %s\\n&quot;, db_name,sqlite3_errmsg(db));  </span><br><span class=\"line\">        sqlite3_close(db);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"> </span><br><span class=\"line\">    //查询数据  </span><br><span class=\"line\">    rc = sqlite3_get_table( db , sql_cmd, &amp;azResult , &amp;nrow , &amp;ncolumn , &amp;zErrMsg );  </span><br><span class=\"line\">    if( rc != SQLITE_OK)</span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        fprintf(stderr, &quot;%s %s: %s\\n&quot;, db_name,sql_cmd, sqlite3_errmsg(db));  </span><br><span class=\"line\">        if(zErrMsg)</span><br><span class=\"line\">            fprintf(stderr,&quot;ErrMsg = %s \\n&quot;, zErrMsg); </span><br><span class=\"line\">        sqlite3_free_table( azResult ); </span><br><span class=\"line\">        sqlite3_close(db);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"> </span><br><span class=\"line\">    for(j=0; j &lt; ncolumn; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(strlen(azResult[j])&gt;len)</span><br><span class=\"line\">            len = strlen(azResult[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    //从第0索引到第 nColumn - 1索引都是字段名称</span><br><span class=\"line\">    //从第 nColumn 索引开始，后面都是字段值</span><br><span class=\"line\">    for( i = 0 ; i &lt; nrow; i++ )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(j=0; j &lt; ncolumn; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            int ll = (len- strlen(azResult[j]));</span><br><span class=\"line\">            while(ll)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot; &quot;);</span><br><span class=\"line\">                --ll;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            printf( &quot;%s: %s\\n&quot;, azResult[j], azResult[(i+1)*ncolumn+j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;\\n&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">#if 0   </span><br><span class=\"line\">    for( j = 0 ; j &lt; ncolumn; j++ )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf( &quot;%s &quot;, azResult[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    printf( &quot;\\n&quot;);  </span><br><span class=\"line\"> </span><br><span class=\"line\">    for( i=ncolumn ; i&lt;( nrow + 1 ) * ncolumn ; i++ )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(((i-ncolumn+1)%ncolumn) ==0)</span><br><span class=\"line\">            printf( &quot;%s\\n&quot;,azResult[i]);</span><br><span class=\"line\">        else</span><br><span class=\"line\">            printf( &quot;%s &quot;,azResult[i] ); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">#endif</span><br><span class=\"line\">    //与sqlite3_get_table对应，释放掉  azResult 的内存空间  </span><br><span class=\"line\">    sqlite3_free_table( azResult ); </span><br><span class=\"line\">    //关闭数据库  </span><br><span class=\"line\">    sqlite3_close(db); </span><br><span class=\"line\">    return 0;  </span><br><span class=\"line\"> </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"> </span><br><span class=\"line\">int search_by_stmt(const char* db_name, const char* sql_cmd) </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    sqlite3 *db=NULL;  </span><br><span class=\"line\">    sqlite3_stmt* stmt = 0;</span><br><span class=\"line\">    int ncolumn = 0;</span><br><span class=\"line\">    const char *column_name;</span><br><span class=\"line\">    int vtype , i;</span><br><span class=\"line\">    int rc;</span><br><span class=\"line\"> </span><br><span class=\"line\">    if(access(db_name, 0) == -1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fprintf(stderr, &quot;%s not found\\n&quot;, db_name);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    rc = sqlite3_open(db_name, &amp;db);</span><br><span class=\"line\"> </span><br><span class=\"line\">    if( rc != SQLITE_OK)</span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        fprintf(stderr, &quot;%s open failed: %s\\n&quot;, db_name,sqlite3_errmsg(db));  </span><br><span class=\"line\">        sqlite3_close(db);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"> </span><br><span class=\"line\">    //查询数据  </span><br><span class=\"line\">    rc = sqlite3_prepare_v2(db, sql_cmd, -1, &amp;stmt, 0);</span><br><span class=\"line\">    if (rc != SQLITE_OK)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fprintf(stderr, &quot;%s %s: %s\\n&quot;, db_name,sql_cmd, sqlite3_errmsg(db));  </span><br><span class=\"line\">        sqlite3_close(db);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    ncolumn = sqlite3_column_count(stmt);</span><br><span class=\"line\"> </span><br><span class=\"line\">    while (sqlite3_step(stmt) == SQLITE_ROW)</span><br><span class=\"line\">    &#123;   </span><br><span class=\"line\">        for(i = 0 ; i &lt; ncolumn ; i++ )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            vtype = sqlite3_column_type(stmt , i);</span><br><span class=\"line\">            column_name = sqlite3_column_name(stmt , i);</span><br><span class=\"line\">            switch( vtype )</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              case SQLITE_NULL:</span><br><span class=\"line\">                  fprintf(stdout, &quot;%s: null\\n&quot;, column_name);   </span><br><span class=\"line\">                break;</span><br><span class=\"line\">              case SQLITE_INTEGER:</span><br><span class=\"line\">                  fprintf(stdout, &quot;%s: %d\\n&quot;, column_name,sqlite3_column_int(stmt,i));  </span><br><span class=\"line\">                break;</span><br><span class=\"line\">              case SQLITE_FLOAT:</span><br><span class=\"line\">                  fprintf(stdout, &quot;%s: %f\\n&quot;, column_name,sqlite3_column_double(stmt,i));   </span><br><span class=\"line\">                break;</span><br><span class=\"line\">              case SQLITE_BLOB: /* arguably fall through... */</span><br><span class=\"line\">                  fprintf(stdout, &quot;%s: BLOB\\n&quot;, column_name);   </span><br><span class=\"line\">                break;</span><br><span class=\"line\">              case SQLITE_TEXT: </span><br><span class=\"line\">                  fprintf(stdout, &quot;%s: %s\\n&quot;, column_name,sqlite3_column_text(stmt,i)); </span><br><span class=\"line\">                break;</span><br><span class=\"line\">              default:</span><br><span class=\"line\">                  fprintf(stdout, &quot;%s: ERROR [%s]\\n&quot;, column_name, sqlite3_errmsg(db)); </span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    sqlite3_finalize(stmt);</span><br><span class=\"line\"> </span><br><span class=\"line\">    //关闭数据库  </span><br><span class=\"line\">    sqlite3_close(db); </span><br><span class=\"line\">    return 0;  </span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">int main(int argc, char* argv[])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int i=0;</span><br><span class=\"line\">    if(argc != 4)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fprintf(stderr, &quot;usage: %s [table/callback/stmt] &lt;db_name&gt; &lt;sql_cmd&gt;\\r\\n&quot;, argv[0]);</span><br><span class=\"line\">        return -1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    if((strcmp(argv[1],&quot;table&quot;) ==0))</span><br><span class=\"line\">        search_by_table(argv[2],argv[3]);</span><br><span class=\"line\">    else if((strcmp(argv[1],&quot;callback&quot;) ==0))</span><br><span class=\"line\">        search_by_callback(argv[2],argv[3]);</span><br><span class=\"line\">    else</span><br><span class=\"line\">        search_by_stmt(argv[2],argv[3]);</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt; </span><br><span class=\"line\">#include &lt;stdlib.h&gt; </span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">#include &quot;sqlite3.h&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\">//</span><br><span class=\"line\">//typedef int (*sqlite3_callback)( </span><br><span class=\"line\">//    void* data,       /* Data provided in the 4th argument of sqlite3_exec() */</span><br><span class=\"line\">//    int ncols,        /* The number of columns in row */</span><br><span class=\"line\">//    char** values,    /* An array of strings representing fields in the row */</span><br><span class=\"line\">//    char** headers    /* An array of strings representing column names */</span><br><span class=\"line\">//); </span><br><span class=\"line\"> </span><br><span class=\"line\">int callback(void* data, int ncols, char** values, char** headers)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int i;</span><br><span class=\"line\">    int len =0;</span><br><span class=\"line\">    int ll=0;</span><br><span class=\"line\">    for(i=0; i &lt; ncols; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(strlen(headers[i])&gt;len)</span><br><span class=\"line\">            len = strlen(headers[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    for(i=0; i &lt; ncols; i++) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ll = len-strlen(headers[i]);</span><br><span class=\"line\">        while(ll)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            fprintf(stdout,&quot; &quot;);</span><br><span class=\"line\">            --ll;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        fprintf(stdout, &quot;%s: %s\\n&quot;, headers[i], values[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    fprintf(stdout, &quot;\\n&quot;);</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">int search_by_callback(const char* db_name, const char* sql_cmd) </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    int i = 0 ;  </span><br><span class=\"line\">    int j = 0 ;  </span><br><span class=\"line\">    int nrow = 0, ncolumn = 0;  </span><br><span class=\"line\">    char **azResult; //二维数组存放结果  </span><br><span class=\"line\">    sqlite3 *db=NULL;  </span><br><span class=\"line\">    char *zErrMsg = 0; </span><br><span class=\"line\">    int rc;</span><br><span class=\"line\">    int len=0;</span><br><span class=\"line\"> </span><br><span class=\"line\">    if(access(db_name, 0) == -1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fprintf(stderr, &quot;%s not found\\n&quot;, db_name);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    rc = sqlite3_open(db_name, &amp;db);</span><br><span class=\"line\"> </span><br><span class=\"line\">    if( rc != SQLITE_OK)</span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        fprintf(stderr, &quot;%s open failed: %s\\n&quot;, db_name,sqlite3_errmsg(db));  </span><br><span class=\"line\">        sqlite3_close(db);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"> </span><br><span class=\"line\">    //查询数据  </span><br><span class=\"line\">    rc = sqlite3_exec( db,sql_cmd, callback, NULL, &amp;zErrMsg );</span><br><span class=\"line\">    if( rc != SQLITE_OK)</span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        fprintf(stderr, &quot;%s %s: %s\\n&quot;, db_name,sql_cmd, sqlite3_errmsg(db));  </span><br><span class=\"line\">        if(zErrMsg)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            fprintf(stderr,&quot;ErrMsg = %s \\n&quot;, zErrMsg); </span><br><span class=\"line\">            sqlite3_free(zErrMsg);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sqlite3_close(db);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    if(zErrMsg)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        sqlite3_free(zErrMsg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    //关闭数据库  </span><br><span class=\"line\">    sqlite3_close(db); </span><br><span class=\"line\">    return 0;  </span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">int search_by_table(const char* db_name, const char* sql_cmd) </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    int i = 0 ;  </span><br><span class=\"line\">    int j = 0 ;  </span><br><span class=\"line\">    int nrow = 0, ncolumn = 0;  </span><br><span class=\"line\">    char **azResult; //二维数组存放结果  </span><br><span class=\"line\">    sqlite3 *db=NULL;  </span><br><span class=\"line\">    char *zErrMsg = 0; </span><br><span class=\"line\">    int rc;</span><br><span class=\"line\">    int len=0;</span><br><span class=\"line\"> </span><br><span class=\"line\">    if(access(db_name, 0) == -1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fprintf(stderr, &quot;%s not found\\n&quot;, db_name);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    rc = sqlite3_open(db_name, &amp;db);</span><br><span class=\"line\"> </span><br><span class=\"line\">    if( rc != SQLITE_OK)</span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        fprintf(stderr, &quot;%s open failed: %s\\n&quot;, db_name,sqlite3_errmsg(db));  </span><br><span class=\"line\">        sqlite3_close(db);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"> </span><br><span class=\"line\">    //查询数据  </span><br><span class=\"line\">    rc = sqlite3_get_table( db , sql_cmd, &amp;azResult , &amp;nrow , &amp;ncolumn , &amp;zErrMsg );  </span><br><span class=\"line\">    if( rc != SQLITE_OK)</span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        fprintf(stderr, &quot;%s %s: %s\\n&quot;, db_name,sql_cmd, sqlite3_errmsg(db));  </span><br><span class=\"line\">        if(zErrMsg)</span><br><span class=\"line\">            fprintf(stderr,&quot;ErrMsg = %s \\n&quot;, zErrMsg); </span><br><span class=\"line\">        sqlite3_free_table( azResult ); </span><br><span class=\"line\">        sqlite3_close(db);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"> </span><br><span class=\"line\">    for(j=0; j &lt; ncolumn; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(strlen(azResult[j])&gt;len)</span><br><span class=\"line\">            len = strlen(azResult[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    //从第0索引到第 nColumn - 1索引都是字段名称</span><br><span class=\"line\">    //从第 nColumn 索引开始，后面都是字段值</span><br><span class=\"line\">    for( i = 0 ; i &lt; nrow; i++ )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        for(j=0; j &lt; ncolumn; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            int ll = (len- strlen(azResult[j]));</span><br><span class=\"line\">            while(ll)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                printf(&quot; &quot;);</span><br><span class=\"line\">                --ll;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            printf( &quot;%s: %s\\n&quot;, azResult[j], azResult[(i+1)*ncolumn+j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        printf(&quot;\\n&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">#if 0   </span><br><span class=\"line\">    for( j = 0 ; j &lt; ncolumn; j++ )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        printf( &quot;%s &quot;, azResult[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    printf( &quot;\\n&quot;);  </span><br><span class=\"line\"> </span><br><span class=\"line\">    for( i=ncolumn ; i&lt;( nrow + 1 ) * ncolumn ; i++ )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if(((i-ncolumn+1)%ncolumn) ==0)</span><br><span class=\"line\">            printf( &quot;%s\\n&quot;,azResult[i]);</span><br><span class=\"line\">        else</span><br><span class=\"line\">            printf( &quot;%s &quot;,azResult[i] ); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">#endif</span><br><span class=\"line\">    //与sqlite3_get_table对应，释放掉  azResult 的内存空间  </span><br><span class=\"line\">    sqlite3_free_table( azResult ); </span><br><span class=\"line\">    //关闭数据库  </span><br><span class=\"line\">    sqlite3_close(db); </span><br><span class=\"line\">    return 0;  </span><br><span class=\"line\"> </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"> </span><br><span class=\"line\">int search_by_stmt(const char* db_name, const char* sql_cmd) </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    sqlite3 *db=NULL;  </span><br><span class=\"line\">    sqlite3_stmt* stmt = 0;</span><br><span class=\"line\">    int ncolumn = 0;</span><br><span class=\"line\">    const char *column_name;</span><br><span class=\"line\">    int vtype , i;</span><br><span class=\"line\">    int rc;</span><br><span class=\"line\"> </span><br><span class=\"line\">    if(access(db_name, 0) == -1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fprintf(stderr, &quot;%s not found\\n&quot;, db_name);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">    rc = sqlite3_open(db_name, &amp;db);</span><br><span class=\"line\"> </span><br><span class=\"line\">    if( rc != SQLITE_OK)</span><br><span class=\"line\">    &#123;  </span><br><span class=\"line\">        fprintf(stderr, &quot;%s open failed: %s\\n&quot;, db_name,sqlite3_errmsg(db));  </span><br><span class=\"line\">        sqlite3_close(db);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\"> </span><br><span class=\"line\">    //查询数据  </span><br><span class=\"line\">    rc = sqlite3_prepare_v2(db, sql_cmd, -1, &amp;stmt, 0);</span><br><span class=\"line\">    if (rc != SQLITE_OK)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fprintf(stderr, &quot;%s %s: %s\\n&quot;, db_name,sql_cmd, sqlite3_errmsg(db));  </span><br><span class=\"line\">        sqlite3_close(db);  </span><br><span class=\"line\">        return -1;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    ncolumn = sqlite3_column_count(stmt);</span><br><span class=\"line\"> </span><br><span class=\"line\">    while (sqlite3_step(stmt) == SQLITE_ROW)</span><br><span class=\"line\">    &#123;   </span><br><span class=\"line\">        for(i = 0 ; i &lt; ncolumn ; i++ )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            vtype = sqlite3_column_type(stmt , i);</span><br><span class=\"line\">            column_name = sqlite3_column_name(stmt , i);</span><br><span class=\"line\">            switch( vtype )</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              case SQLITE_NULL:</span><br><span class=\"line\">                  fprintf(stdout, &quot;%s: null\\n&quot;, column_name);   </span><br><span class=\"line\">                break;</span><br><span class=\"line\">              case SQLITE_INTEGER:</span><br><span class=\"line\">                  fprintf(stdout, &quot;%s: %d\\n&quot;, column_name,sqlite3_column_int(stmt,i));  </span><br><span class=\"line\">                break;</span><br><span class=\"line\">              case SQLITE_FLOAT:</span><br><span class=\"line\">                  fprintf(stdout, &quot;%s: %f\\n&quot;, column_name,sqlite3_column_double(stmt,i));   </span><br><span class=\"line\">                break;</span><br><span class=\"line\">              case SQLITE_BLOB: /* arguably fall through... */</span><br><span class=\"line\">                  fprintf(stdout, &quot;%s: BLOB\\n&quot;, column_name);   </span><br><span class=\"line\">                break;</span><br><span class=\"line\">              case SQLITE_TEXT: </span><br><span class=\"line\">                  fprintf(stdout, &quot;%s: %s\\n&quot;, column_name,sqlite3_column_text(stmt,i)); </span><br><span class=\"line\">                break;</span><br><span class=\"line\">              default:</span><br><span class=\"line\">                  fprintf(stdout, &quot;%s: ERROR [%s]\\n&quot;, column_name, sqlite3_errmsg(db)); </span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    sqlite3_finalize(stmt);</span><br><span class=\"line\"> </span><br><span class=\"line\">    //关闭数据库  </span><br><span class=\"line\">    sqlite3_close(db); </span><br><span class=\"line\">    return 0;  </span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">int main(int argc, char* argv[])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int i=0;</span><br><span class=\"line\">    if(argc != 4)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fprintf(stderr, &quot;usage: %s [table/callback/stmt] &lt;db_name&gt; &lt;sql_cmd&gt;\\r\\n&quot;, argv[0]);</span><br><span class=\"line\">        return -1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    if((strcmp(argv[1],&quot;table&quot;) ==0))</span><br><span class=\"line\">        search_by_table(argv[2],argv[3]);</span><br><span class=\"line\">    else if((strcmp(argv[1],&quot;callback&quot;) ==0))</span><br><span class=\"line\">        search_by_callback(argv[2],argv[3]);</span><br><span class=\"line\">    else</span><br><span class=\"line\">        search_by_stmt(argv[2],argv[3]);</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"用Hexo写博客需要的所有知识总结","date":"2016-03-03T12:45:19.000Z","_content":"\n\n### 了解Hexo\n[Hexo Docs](http://www.ituring.com.cn/article/199295)\n[Hexo命令大全](http://wiki.jikexueyuan.com/project/hexo-document/)\n\n### 了解markdown语法\n* [makedown语法简明版](http://www.appinn.com/markdown/basic.html)\n* [makedown语法完整版](http://www.appinn.com/markdown/basic.html)\n\n\n\n### 写博客的工具\n* sublime text2\n1. 文本编辑神器 sublime text2\n2. sublime makedown插件\n\n* mou(mac环境)","source":"_posts/Hexo写博客需要的所有知识总结.md","raw":"---\ntitle: 用Hexo写博客需要的所有知识总结\ndate: 2016-03-03 20:45:19\ncategories: 工具和插件\ntags: [Hexo,markdown,经验总结] \n---\n\n\n### 了解Hexo\n[Hexo Docs](http://www.ituring.com.cn/article/199295)\n[Hexo命令大全](http://wiki.jikexueyuan.com/project/hexo-document/)\n\n### 了解markdown语法\n* [makedown语法简明版](http://www.appinn.com/markdown/basic.html)\n* [makedown语法完整版](http://www.appinn.com/markdown/basic.html)\n\n\n\n### 写博客的工具\n* sublime text2\n1. 文本编辑神器 sublime text2\n2. sublime makedown插件\n\n* mou(mac环境)","slug":"Hexo写博客需要的所有知识总结","published":1,"updated":"2016-03-04T03:44:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilhs085b0007ggd5vj3qk5ey","content":"<h3 id=\"了解Hexo\"><a href=\"#了解Hexo\" class=\"headerlink\" title=\"了解Hexo\"></a>了解Hexo</h3><p><a href=\"http://www.ituring.com.cn/article/199295\" target=\"_blank\" rel=\"external\">Hexo Docs</a><br><a href=\"http://wiki.jikexueyuan.com/project/hexo-document/\" target=\"_blank\" rel=\"external\">Hexo命令大全</a></p>\n<h3 id=\"了解markdown语法\"><a href=\"#了解markdown语法\" class=\"headerlink\" title=\"了解markdown语法\"></a>了解markdown语法</h3><ul>\n<li><a href=\"http://www.appinn.com/markdown/basic.html\" target=\"_blank\" rel=\"external\">makedown语法简明版</a></li>\n<li><a href=\"http://www.appinn.com/markdown/basic.html\" target=\"_blank\" rel=\"external\">makedown语法完整版</a></li>\n</ul>\n<h3 id=\"写博客的工具\"><a href=\"#写博客的工具\" class=\"headerlink\" title=\"写博客的工具\"></a>写博客的工具</h3><ul>\n<li>sublime text2</li>\n</ul>\n<ol>\n<li>文本编辑神器 sublime text2</li>\n<li>sublime makedown插件</li>\n</ol>\n<ul>\n<li>mou(mac环境)</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"了解Hexo\"><a href=\"#了解Hexo\" class=\"headerlink\" title=\"了解Hexo\"></a>了解Hexo</h3><p><a href=\"http://www.ituring.com.cn/article/199295\">Hexo Docs</a><br><a href=\"http://wiki.jikexueyuan.com/project/hexo-document/\">Hexo命令大全</a></p>\n<h3 id=\"了解markdown语法\"><a href=\"#了解markdown语法\" class=\"headerlink\" title=\"了解markdown语法\"></a>了解markdown语法</h3><ul>\n<li><a href=\"http://www.appinn.com/markdown/basic.html\">makedown语法简明版</a></li>\n<li><a href=\"http://www.appinn.com/markdown/basic.html\">makedown语法完整版</a></li>\n</ul>\n<h3 id=\"写博客的工具\"><a href=\"#写博客的工具\" class=\"headerlink\" title=\"写博客的工具\"></a>写博客的工具</h3><ul>\n<li>sublime text2</li>\n</ul>\n<ol>\n<li>文本编辑神器 sublime text2</li>\n<li>sublime makedown插件</li>\n</ol>\n<ul>\n<li>mou(mac环境)</li>\n</ul>\n"},{"title":"利用Swig自动化生成JNI方法","date":"2016-03-07T01:46:45.000Z","_content":"\n\nhttp://www.swig.org/Doc2.0/Android.html#Android_examples_intro\n\nhttp://www.swig.org/Doc2.0/Java.html","source":"_posts/2016-03-07-利用Swig自动化生成JNI方法.md","raw":"---\ntitle: 利用Swig自动化生成JNI方法\ndate: 2016-03-07 09:46:45\ntags:\n---\n\n\nhttp://www.swig.org/Doc2.0/Android.html#Android_examples_intro\n\nhttp://www.swig.org/Doc2.0/Java.html","slug":"利用Swig自动化生成JNI方法","published":1,"updated":"2016-03-07T06:24:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilhs085k000aggd5ksllkssi","content":"<p><a href=\"http://www.swig.org/Doc2.0/Android.html#Android_examples_intro\" target=\"_blank\" rel=\"external\">http://www.swig.org/Doc2.0/Android.html#Android_examples_intro</a></p>\n<p><a href=\"http://www.swig.org/Doc2.0/Java.html\" target=\"_blank\" rel=\"external\">http://www.swig.org/Doc2.0/Java.html</a></p>\n","excerpt":"","more":"<p><a href=\"http://www.swig.org/Doc2.0/Android.html#Android_examples_intro\">http://www.swig.org/Doc2.0/Android.html#Android_examples_intro</a></p>\n<p><a href=\"http://www.swig.org/Doc2.0/Java.html\">http://www.swig.org/Doc2.0/Java.html</a></p>\n"},{"title":"markdown语法例子","date":"2016-03-03T12:46:34.000Z","_content":"\nA First Level Header\n====================\nA Second Level Header\n---------------------\n\nNow is the time for all good men to come to\nthe aid of their country. This is just a\nregular paragraph.\n\nThe quick brown fox jumped over the lazy\ndog's back.\n### Header 3\n\n## Header 2\n\n# Header 1\n\n> This is a blockquote.\n> \n> This is the second paragraph in the blockquote.\n>\n> ## This is an H2 in a blockquote\n\n\n\n\n\n\n\n\nSome of these words *are emphasized*.\nSome of these words _are emphasized also_.\nUse two asterisks for **strong emphasis**.\nOr, if you prefer, __use two underscores instead__.\n\n\n\n* Candy.\n* Gum.\n* Booze.\n\n\n+ Candy.\n+ Gum.\n+ Booze.\n\n- Candy.\n- Gum.\n- Booze.\n\n\n1. Red\n2. Green\n3. Blue\n\n\n* A list item.\nWith multiple paragraphs.\n\n\n* Another item in the list.\n\n\nThis is an [example link](http://example.com/).\n\n\nThis is an [example link](http://example.com/ \"With a Title\").\n\n\nI get 10 times more traffic from [Google][1] than from\n[Yahoo][2] or [MSN][3].\n\n[1]: http://google.com/ \"Google\"\n[2]: http://search.yahoo.com/ \"Yahoo Search\"\n[3]: http://search.msn.com/ \"MSN Search\"\n\n\n\nI start my morning with a cup of coffee and\n[The New York Times][NY Times].\n\n[ny times]: http://www.nytimes.com/\n\n\n\n\n![alt text](http://avatar.csdn.net/9/8/E/1_abcdefh123.jpg \"Title\")\n\n\n\nI strongly recommend against using any `<blink>` tags.\n\nI wish SmartyPants used named entities like `&mdash;`\ninstead of decimal-encoded entites like `&#8212;`.\n\n\n\nIf you want your page to validate under XHTML 1.0 Strict,\nyou've got to put paragraph tags in your blockquotes:\n\n<blockquote>\n<p>For example.</p>\n</blockquote>\n\n\n这是一个普通段落：\n\n    这是一个代码区块。\n\n\n\n\n","source":"_posts/markdown语法例子.md","raw":"---\ntitle: markdown语法例子\ndate: 2016-03-03 20:46:34\ntags: [markdown,demo] \ncategories: 参考\n---\n\nA First Level Header\n====================\nA Second Level Header\n---------------------\n\nNow is the time for all good men to come to\nthe aid of their country. This is just a\nregular paragraph.\n\nThe quick brown fox jumped over the lazy\ndog's back.\n### Header 3\n\n## Header 2\n\n# Header 1\n\n> This is a blockquote.\n> \n> This is the second paragraph in the blockquote.\n>\n> ## This is an H2 in a blockquote\n\n\n\n\n\n\n\n\nSome of these words *are emphasized*.\nSome of these words _are emphasized also_.\nUse two asterisks for **strong emphasis**.\nOr, if you prefer, __use two underscores instead__.\n\n\n\n* Candy.\n* Gum.\n* Booze.\n\n\n+ Candy.\n+ Gum.\n+ Booze.\n\n- Candy.\n- Gum.\n- Booze.\n\n\n1. Red\n2. Green\n3. Blue\n\n\n* A list item.\nWith multiple paragraphs.\n\n\n* Another item in the list.\n\n\nThis is an [example link](http://example.com/).\n\n\nThis is an [example link](http://example.com/ \"With a Title\").\n\n\nI get 10 times more traffic from [Google][1] than from\n[Yahoo][2] or [MSN][3].\n\n[1]: http://google.com/ \"Google\"\n[2]: http://search.yahoo.com/ \"Yahoo Search\"\n[3]: http://search.msn.com/ \"MSN Search\"\n\n\n\nI start my morning with a cup of coffee and\n[The New York Times][NY Times].\n\n[ny times]: http://www.nytimes.com/\n\n\n\n\n![alt text](http://avatar.csdn.net/9/8/E/1_abcdefh123.jpg \"Title\")\n\n\n\nI strongly recommend against using any `<blink>` tags.\n\nI wish SmartyPants used named entities like `&mdash;`\ninstead of decimal-encoded entites like `&#8212;`.\n\n\n\nIf you want your page to validate under XHTML 1.0 Strict,\nyou've got to put paragraph tags in your blockquotes:\n\n<blockquote>\n<p>For example.</p>\n</blockquote>\n\n\n这是一个普通段落：\n\n    这是一个代码区块。\n\n\n\n\n","slug":"markdown语法例子","published":1,"updated":"2016-03-04T03:44:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilhs085n000bggd55e94ciz9","content":"<h1 id=\"A-First-Level-Header\"><a href=\"#A-First-Level-Header\" class=\"headerlink\" title=\"A First Level Header\"></a>A First Level Header</h1><h2 id=\"A-Second-Level-Header\"><a href=\"#A-Second-Level-Header\" class=\"headerlink\" title=\"A Second Level Header\"></a>A Second Level Header</h2><p>Now is the time for all good men to come to<br>the aid of their country. This is just a<br>regular paragraph.</p>\n<p>The quick brown fox jumped over the lazy<br>dog’s back.</p>\n<h3 id=\"Header-3\"><a href=\"#Header-3\" class=\"headerlink\" title=\"Header 3\"></a>Header 3</h3><h2 id=\"Header-2\"><a href=\"#Header-2\" class=\"headerlink\" title=\"Header 2\"></a>Header 2</h2><h1 id=\"Header-1\"><a href=\"#Header-1\" class=\"headerlink\" title=\"Header 1\"></a>Header 1</h1><blockquote>\n<p>This is a blockquote.</p>\n<p>This is the second paragraph in the blockquote.</p>\n<h2 id=\"This-is-an-H2-in-a-blockquote\"><a href=\"#This-is-an-H2-in-a-blockquote\" class=\"headerlink\" title=\"This is an H2 in a blockquote\"></a>This is an H2 in a blockquote</h2></blockquote>\n<p>Some of these words <em>are emphasized</em>.<br>Some of these words <em>are emphasized also</em>.<br>Use two asterisks for <strong>strong emphasis</strong>.<br>Or, if you prefer, <strong>use two underscores instead</strong>.</p>\n<ul>\n<li>Candy.</li>\n<li>Gum.</li>\n<li>Booze.</li>\n</ul>\n<ul>\n<li>Candy.</li>\n<li>Gum.</li>\n<li>Booze.</li>\n</ul>\n<ul>\n<li>Candy.</li>\n<li>Gum.</li>\n<li>Booze.</li>\n</ul>\n<ol>\n<li>Red</li>\n<li>Green</li>\n<li>Blue</li>\n</ol>\n<ul>\n<li>A list item.<br>With multiple paragraphs.</li>\n</ul>\n<ul>\n<li>Another item in the list.</li>\n</ul>\n<p>This is an <a href=\"http://example.com/\" target=\"_blank\" rel=\"external\">example link</a>.</p>\n<p>This is an <a href=\"http://example.com/\" title=\"With a Title\" target=\"_blank\" rel=\"external\">example link</a>.</p>\n<p>I get 10 times more traffic from <a href=\"http://google.com/\" title=\"Google\" target=\"_blank\" rel=\"external\">Google</a> than from<br><a href=\"http://search.yahoo.com/\" title=\"Yahoo Search\" target=\"_blank\" rel=\"external\">Yahoo</a> or <a href=\"http://search.msn.com/\" title=\"MSN Search\" target=\"_blank\" rel=\"external\">MSN</a>.</p>\n<p>I start my morning with a cup of coffee and<br><a href=\"http://www.nytimes.com/\" target=\"_blank\" rel=\"external\">The New York Times</a>.</p>\n<p><img src=\"http://avatar.csdn.net/9/8/E/1_abcdefh123.jpg\" alt=\"alt text\" title=\"Title\"></p>\n<p>I strongly recommend against using any <code>&lt;blink&gt;</code> tags.</p>\n<p>I wish SmartyPants used named entities like <code>&amp;mdash;</code><br>instead of decimal-encoded entites like <code>&amp;#8212;</code>.</p>\n<p>If you want your page to validate under XHTML 1.0 Strict,<br>you’ve got to put paragraph tags in your blockquotes:</p>\n<blockquote><br><p>For example.</p><br></blockquote>\n\n\n<p>这是一个普通段落：</p>\n<pre><code>这是一个代码区块。\n</code></pre>","excerpt":"","more":"<h1 id=\"A-First-Level-Header\"><a href=\"#A-First-Level-Header\" class=\"headerlink\" title=\"A First Level Header\"></a>A First Level Header</h1><h2 id=\"A-Second-Level-Header\"><a href=\"#A-Second-Level-Header\" class=\"headerlink\" title=\"A Second Level Header\"></a>A Second Level Header</h2><p>Now is the time for all good men to come to<br>the aid of their country. This is just a<br>regular paragraph.</p>\n<p>The quick brown fox jumped over the lazy<br>dog’s back.</p>\n<h3 id=\"Header-3\"><a href=\"#Header-3\" class=\"headerlink\" title=\"Header 3\"></a>Header 3</h3><h2 id=\"Header-2\"><a href=\"#Header-2\" class=\"headerlink\" title=\"Header 2\"></a>Header 2</h2><h1 id=\"Header-1\"><a href=\"#Header-1\" class=\"headerlink\" title=\"Header 1\"></a>Header 1</h1><blockquote>\n<p>This is a blockquote.</p>\n<p>This is the second paragraph in the blockquote.</p>\n<h2 id=\"This-is-an-H2-in-a-blockquote\"><a href=\"#This-is-an-H2-in-a-blockquote\" class=\"headerlink\" title=\"This is an H2 in a blockquote\"></a>This is an H2 in a blockquote</h2></blockquote>\n<p>Some of these words <em>are emphasized</em>.<br>Some of these words <em>are emphasized also</em>.<br>Use two asterisks for <strong>strong emphasis</strong>.<br>Or, if you prefer, <strong>use two underscores instead</strong>.</p>\n<ul>\n<li>Candy.</li>\n<li>Gum.</li>\n<li>Booze.</li>\n</ul>\n<ul>\n<li>Candy.</li>\n<li>Gum.</li>\n<li>Booze.</li>\n</ul>\n<ul>\n<li>Candy.</li>\n<li>Gum.</li>\n<li>Booze.</li>\n</ul>\n<ol>\n<li>Red</li>\n<li>Green</li>\n<li>Blue</li>\n</ol>\n<ul>\n<li>A list item.<br>With multiple paragraphs.</li>\n</ul>\n<ul>\n<li>Another item in the list.</li>\n</ul>\n<p>This is an <a href=\"http://example.com/\">example link</a>.</p>\n<p>This is an <a href=\"http://example.com/\" title=\"With a Title\">example link</a>.</p>\n<p>I get 10 times more traffic from <a href=\"http://google.com/\" title=\"Google\">Google</a> than from<br><a href=\"http://search.yahoo.com/\" title=\"Yahoo Search\">Yahoo</a> or <a href=\"http://search.msn.com/\" title=\"MSN Search\">MSN</a>.</p>\n<p>I start my morning with a cup of coffee and<br><a href=\"http://www.nytimes.com/\">The New York Times</a>.</p>\n<p><img src=\"http://avatar.csdn.net/9/8/E/1_abcdefh123.jpg\" alt=\"alt text\" title=\"Title\"></p>\n<p>I strongly recommend against using any <code>&lt;blink&gt;</code> tags.</p>\n<p>I wish SmartyPants used named entities like <code>&amp;mdash;</code><br>instead of decimal-encoded entites like <code>&amp;#8212;</code>.</p>\n<p>If you want your page to validate under XHTML 1.0 Strict,<br>you’ve got to put paragraph tags in your blockquotes:</p>\n<blockquote><br><p>For example.</p><br></blockquote>\n\n\n<p>这是一个普通段落：</p>\n<pre><code>这是一个代码区块。\n</code></pre>"},{"title":"Mac下搭建Hexo + Github 详细步骤 教程","date":"2016-03-03T08:30:19.000Z","_content":"\n\n## 感想，第一篇日记\n\n{% blockquote %}\n做技术5年多了,其间有多次想好好写博客，一直没有坚持下来，中间断断续续使用过一些博客产品都没有坚持。\n最近看了一博文，感触很深，所以决定重新开启博客之旅，并好好坚持下去。\n一来是，给自己技术学习的一种积累，梳理。\n二来，提高自己书面表达能力，前几年书没有觉得，现在是觉得自己表达能力真的出了问题。\n之前就有使用过github搭建博客，不过之前使用的是Octopress，然后也是跟风，搭完就没用了。\n这次看了文章[《我为什么坚持写博客》](http://bbs.ruoren.com/thread-35485316-1-1.html)目标是每周至少3篇认真原创文章。\n好，废话不多说，开始。\n{% endblockquote %}\n\n\n\n\n\n\n## 准备工作，从零开始\nHexo是一款基于Node.js的静态博客框架，而Node.js可以简单理解为可以用js语言写服务器后端的框架。\n然后如果要发布到github上需要git和github帐号。\n因为用的是mac环境，所以直接用Homebrew（这是mac下超强的包管理工具，基本开发人员必备）来安装。\n\n**如果有安装过可以跳过步骤**\n**这里可能出现一些问题，可能由于权限问题，如果是，在命令前加sudo。**\n\n\n### 安装 Homebrew\n命令行直接输入\n\n\t$ ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)”\n\n\n\n### 安装 git\n因为安装过Homebrew，可以使用命令brew\n\n\t$ brew install git\n\n\n\n### 安装 node.js \n\t$ brew install node\n\n\n\n### 安装 hexo\n\t$ npm install -g hexo\n\n这里的npm是node下的一个包管理工具。\n－g命令代表全局安装，否则安装到命令执行时当前.／node_modules目录。\n－g会安装到{prefix}／node_modules目录。prefix是默认制定的，一般在prefix = \"/usr/local\"\n命令 npm config ls 可查看 prefix\n命令 npm config set prefix \"xxxxx\" 可以指定prefix目录（不建议修改）\n\n**到此为止，安装完毕**\n**这里可能出现一些问题，可能由于权限问题，如果是，在命令前加sudo。**\n\n\n\n\n## 安装博客,调试\n\n### 创建博客\n创建本地一个目录，用来创建博客，比如\n{% codeblock %}\n$ mkdir hexo\n$ cd hexo\n$ sudo hexo init\n{% endcodeblock %}\n创建完毕！\n\n### 本地调试\n{% codeblock %}\n$ sudo hexo server\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n{% endcodeblock %}\n\n或者，缩写\n{% codeblock %}\n$ sudo hexo s\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n{% endcodeblock %}\n然后可以访问 http://localhost:4000 来查看结果\n\n**注意如果访问一直没响应 可能有端口占用问题，可以运行下面命令指定端口**\n\n\t$ sudo hexo server -p xxxx\n\n**更多hexo命令用法，可以查看我的[Hexo写博客需要的所有知识总结](http://tangfuhao.github.io/2016/03/03/Hexo%E5%86%99%E5%8D%9A%E5%AE%A2%E9%9C%80%E8%A6%81%E7%9A%84%E6%89%80%E6%9C%89%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/)**\n\n\n## 发布到github\n*需要注册github帐号，这个很简单略过*\n\n### 设置github帐号ssh验证(可以跳过)\n首先需要在本机设置ssh key以保证push工程时不需要在授权,如果没有设置，也会在发布时要求输入帐号密码\n\n### 利用github二级域名 创建资源\ngithub会提供以用户名创建的二级域名，例如：yourusername.github.com\n用法是需要创建一个名称为yourusername.github.io的资源\n比如我的用户名为tangfuhao所以创建一个tangfuhao.github.io的资源\n然后当发布完资源后可以通过yourusername.github.com或者yourusername.github.io来访问网站\n\n创建资源过程略过。\n\n### 安装发布插件\n在博客文件夹运行下面命令，来安装git部署的工具\n\n\t$ npm install hexo-deployer-git --save\n\n然后在_config.yml文件修改发布的配置，最后一行改为（注意替换yourusername）\n{% codeblock %}\ndeploy:\n  type: git\n  repo: https://github.com/yourusername/yourusername.github.com.git\n  branch: master\n{% endcodeblock %}\n\n### 运行生成发布\n执行命令发布\n{% codeblock %}\n$ sudo hexo generate\n$ sudo hexo deploy\n{% endcodeblock %}\n\n或者缩写\n\n\tsudo hexo d -g\n\n以后更新了文章 再执行命令，来更新站点\n{% codeblock %}\n$ sudo hexo generate\n$ sudo hexo deploy\n{% endcodeblock %}\n\n或者缩写\n\n\tsudo hexo d -g\n\n如果改动了站点的源码，需要在发布之前\n\t$ sudo hexo clean\n\n如果成功了就可以通过yourusername.github.com或者yourusername.github.io来访问你的博客了\n\n\n## 自定义博客\n\n\n### 更换主题\n\n如果你对默认的主题不满意，可以通过克隆的方式，把别人的主题克隆过来,比如我使用的这一套\n\n\tgit clone https://github.com/iissnan/hexo-theme-next.git themes/next\n\n然后在_config.yml中theme选项下 指定主题，比如我指定为\n\n\ttheme: next\n\n更多的主题可以[参考](https://www.zhihu.com/question/24422335)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Mac下搭建Hexo-Github博客.md","raw":"---\ntitle: Mac下搭建Hexo + Github 详细步骤 教程\ndate: 2016-03-03 16:30:19\ncategories: 工具和插件\ntags: [Hexo,Github,工具] \n---\n\n\n## 感想，第一篇日记\n\n{% blockquote %}\n做技术5年多了,其间有多次想好好写博客，一直没有坚持下来，中间断断续续使用过一些博客产品都没有坚持。\n最近看了一博文，感触很深，所以决定重新开启博客之旅，并好好坚持下去。\n一来是，给自己技术学习的一种积累，梳理。\n二来，提高自己书面表达能力，前几年书没有觉得，现在是觉得自己表达能力真的出了问题。\n之前就有使用过github搭建博客，不过之前使用的是Octopress，然后也是跟风，搭完就没用了。\n这次看了文章[《我为什么坚持写博客》](http://bbs.ruoren.com/thread-35485316-1-1.html)目标是每周至少3篇认真原创文章。\n好，废话不多说，开始。\n{% endblockquote %}\n\n\n\n\n\n\n## 准备工作，从零开始\nHexo是一款基于Node.js的静态博客框架，而Node.js可以简单理解为可以用js语言写服务器后端的框架。\n然后如果要发布到github上需要git和github帐号。\n因为用的是mac环境，所以直接用Homebrew（这是mac下超强的包管理工具，基本开发人员必备）来安装。\n\n**如果有安装过可以跳过步骤**\n**这里可能出现一些问题，可能由于权限问题，如果是，在命令前加sudo。**\n\n\n### 安装 Homebrew\n命令行直接输入\n\n\t$ ruby -e \"$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)”\n\n\n\n### 安装 git\n因为安装过Homebrew，可以使用命令brew\n\n\t$ brew install git\n\n\n\n### 安装 node.js \n\t$ brew install node\n\n\n\n### 安装 hexo\n\t$ npm install -g hexo\n\n这里的npm是node下的一个包管理工具。\n－g命令代表全局安装，否则安装到命令执行时当前.／node_modules目录。\n－g会安装到{prefix}／node_modules目录。prefix是默认制定的，一般在prefix = \"/usr/local\"\n命令 npm config ls 可查看 prefix\n命令 npm config set prefix \"xxxxx\" 可以指定prefix目录（不建议修改）\n\n**到此为止，安装完毕**\n**这里可能出现一些问题，可能由于权限问题，如果是，在命令前加sudo。**\n\n\n\n\n## 安装博客,调试\n\n### 创建博客\n创建本地一个目录，用来创建博客，比如\n{% codeblock %}\n$ mkdir hexo\n$ cd hexo\n$ sudo hexo init\n{% endcodeblock %}\n创建完毕！\n\n### 本地调试\n{% codeblock %}\n$ sudo hexo server\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n{% endcodeblock %}\n\n或者，缩写\n{% codeblock %}\n$ sudo hexo s\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n{% endcodeblock %}\n然后可以访问 http://localhost:4000 来查看结果\n\n**注意如果访问一直没响应 可能有端口占用问题，可以运行下面命令指定端口**\n\n\t$ sudo hexo server -p xxxx\n\n**更多hexo命令用法，可以查看我的[Hexo写博客需要的所有知识总结](http://tangfuhao.github.io/2016/03/03/Hexo%E5%86%99%E5%8D%9A%E5%AE%A2%E9%9C%80%E8%A6%81%E7%9A%84%E6%89%80%E6%9C%89%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/)**\n\n\n## 发布到github\n*需要注册github帐号，这个很简单略过*\n\n### 设置github帐号ssh验证(可以跳过)\n首先需要在本机设置ssh key以保证push工程时不需要在授权,如果没有设置，也会在发布时要求输入帐号密码\n\n### 利用github二级域名 创建资源\ngithub会提供以用户名创建的二级域名，例如：yourusername.github.com\n用法是需要创建一个名称为yourusername.github.io的资源\n比如我的用户名为tangfuhao所以创建一个tangfuhao.github.io的资源\n然后当发布完资源后可以通过yourusername.github.com或者yourusername.github.io来访问网站\n\n创建资源过程略过。\n\n### 安装发布插件\n在博客文件夹运行下面命令，来安装git部署的工具\n\n\t$ npm install hexo-deployer-git --save\n\n然后在_config.yml文件修改发布的配置，最后一行改为（注意替换yourusername）\n{% codeblock %}\ndeploy:\n  type: git\n  repo: https://github.com/yourusername/yourusername.github.com.git\n  branch: master\n{% endcodeblock %}\n\n### 运行生成发布\n执行命令发布\n{% codeblock %}\n$ sudo hexo generate\n$ sudo hexo deploy\n{% endcodeblock %}\n\n或者缩写\n\n\tsudo hexo d -g\n\n以后更新了文章 再执行命令，来更新站点\n{% codeblock %}\n$ sudo hexo generate\n$ sudo hexo deploy\n{% endcodeblock %}\n\n或者缩写\n\n\tsudo hexo d -g\n\n如果改动了站点的源码，需要在发布之前\n\t$ sudo hexo clean\n\n如果成功了就可以通过yourusername.github.com或者yourusername.github.io来访问你的博客了\n\n\n## 自定义博客\n\n\n### 更换主题\n\n如果你对默认的主题不满意，可以通过克隆的方式，把别人的主题克隆过来,比如我使用的这一套\n\n\tgit clone https://github.com/iissnan/hexo-theme-next.git themes/next\n\n然后在_config.yml中theme选项下 指定主题，比如我指定为\n\n\ttheme: next\n\n更多的主题可以[参考](https://www.zhihu.com/question/24422335)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Mac下搭建Hexo-Github博客","published":1,"updated":"2016-03-04T03:44:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cilhs085r000dggd5j1r59mkc","content":"<h2 id=\"感想，第一篇日记\"><a href=\"#感想，第一篇日记\" class=\"headerlink\" title=\"感想，第一篇日记\"></a>感想，第一篇日记</h2><blockquote><p>做技术5年多了,其间有多次想好好写博客，一直没有坚持下来，中间断断续续使用过一些博客产品都没有坚持。<br>最近看了一博文，感触很深，所以决定重新开启博客之旅，并好好坚持下去。<br>一来是，给自己技术学习的一种积累，梳理。<br>二来，提高自己书面表达能力，前几年书没有觉得，现在是觉得自己表达能力真的出了问题。<br>之前就有使用过github搭建博客，不过之前使用的是Octopress，然后也是跟风，搭完就没用了。<br>这次看了文章<a href=\"http://bbs.ruoren.com/thread-35485316-1-1.html\" target=\"_blank\" rel=\"external\">《我为什么坚持写博客》</a>目标是每周至少3篇认真原创文章。<br>好，废话不多说，开始。</p>\n</blockquote>\n<h2 id=\"准备工作，从零开始\"><a href=\"#准备工作，从零开始\" class=\"headerlink\" title=\"准备工作，从零开始\"></a>准备工作，从零开始</h2><p>Hexo是一款基于Node.js的静态博客框架，而Node.js可以简单理解为可以用js语言写服务器后端的框架。<br>然后如果要发布到github上需要git和github帐号。<br>因为用的是mac环境，所以直接用Homebrew（这是mac下超强的包管理工具，基本开发人员必备）来安装。</p>\n<p><strong>如果有安装过可以跳过步骤</strong><br><strong>这里可能出现一些问题，可能由于权限问题，如果是，在命令前加sudo。</strong></p>\n<h3 id=\"安装-Homebrew\"><a href=\"#安装-Homebrew\" class=\"headerlink\" title=\"安装 Homebrew\"></a>安装 Homebrew</h3><p>命令行直接输入</p>\n<pre><code>$ ruby -e &quot;$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)”\n</code></pre><h3 id=\"安装-git\"><a href=\"#安装-git\" class=\"headerlink\" title=\"安装 git\"></a>安装 git</h3><p>因为安装过Homebrew，可以使用命令brew</p>\n<pre><code>$ brew install git\n</code></pre><h3 id=\"安装-node-js\"><a href=\"#安装-node-js\" class=\"headerlink\" title=\"安装 node.js\"></a>安装 node.js</h3><pre><code>$ brew install node\n</code></pre><h3 id=\"安装-hexo\"><a href=\"#安装-hexo\" class=\"headerlink\" title=\"安装 hexo\"></a>安装 hexo</h3><pre><code>$ npm install -g hexo\n</code></pre><p>这里的npm是node下的一个包管理工具。<br>－g命令代表全局安装，否则安装到命令执行时当前.／node_modules目录。<br>－g会安装到{prefix}／node_modules目录。prefix是默认制定的，一般在prefix = “/usr/local”<br>命令 npm config ls 可查看 prefix<br>命令 npm config set prefix “xxxxx” 可以指定prefix目录（不建议修改）</p>\n<p><strong>到此为止，安装完毕</strong><br><strong>这里可能出现一些问题，可能由于权限问题，如果是，在命令前加sudo。</strong></p>\n<h2 id=\"安装博客-调试\"><a href=\"#安装博客-调试\" class=\"headerlink\" title=\"安装博客,调试\"></a>安装博客,调试</h2><h3 id=\"创建博客\"><a href=\"#创建博客\" class=\"headerlink\" title=\"创建博客\"></a>创建博客</h3><p>创建本地一个目录，用来创建博客，比如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir hexo</span><br><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ sudo hexo init</span><br></pre></td></tr></table></figure><br>创建完毕！</p>\n<h3 id=\"本地调试\"><a href=\"#本地调试\" class=\"headerlink\" title=\"本地调试\"></a>本地调试</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo hexo server</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>\n<p>或者，缩写<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo hexo s</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><br>然后可以访问 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a> 来查看结果</p>\n<p><strong>注意如果访问一直没响应 可能有端口占用问题，可以运行下面命令指定端口</strong></p>\n<pre><code>$ sudo hexo server -p xxxx\n</code></pre><p><strong>更多hexo命令用法，可以查看我的<a href=\"http://tangfuhao.github.io/2016/03/03/Hexo%E5%86%99%E5%8D%9A%E5%AE%A2%E9%9C%80%E8%A6%81%E7%9A%84%E6%89%80%E6%9C%89%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/\" target=\"_blank\" rel=\"external\">Hexo写博客需要的所有知识总结</a></strong></p>\n<h2 id=\"发布到github\"><a href=\"#发布到github\" class=\"headerlink\" title=\"发布到github\"></a>发布到github</h2><p><em>需要注册github帐号，这个很简单略过</em></p>\n<h3 id=\"设置github帐号ssh验证-可以跳过\"><a href=\"#设置github帐号ssh验证-可以跳过\" class=\"headerlink\" title=\"设置github帐号ssh验证(可以跳过)\"></a>设置github帐号ssh验证(可以跳过)</h3><p>首先需要在本机设置ssh key以保证push工程时不需要在授权,如果没有设置，也会在发布时要求输入帐号密码</p>\n<h3 id=\"利用github二级域名-创建资源\"><a href=\"#利用github二级域名-创建资源\" class=\"headerlink\" title=\"利用github二级域名 创建资源\"></a>利用github二级域名 创建资源</h3><p>github会提供以用户名创建的二级域名，例如：yourusername.github.com<br>用法是需要创建一个名称为yourusername.github.io的资源<br>比如我的用户名为tangfuhao所以创建一个tangfuhao.github.io的资源<br>然后当发布完资源后可以通过yourusername.github.com或者yourusername.github.io来访问网站</p>\n<p>创建资源过程略过。</p>\n<h3 id=\"安装发布插件\"><a href=\"#安装发布插件\" class=\"headerlink\" title=\"安装发布插件\"></a>安装发布插件</h3><p>在博客文件夹运行下面命令，来安装git部署的工具</p>\n<pre><code>$ npm install hexo-deployer-git --save\n</code></pre><p>然后在_config.yml文件修改发布的配置，最后一行改为（注意替换yourusername）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/yourusername/yourusername.github.com.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"运行生成发布\"><a href=\"#运行生成发布\" class=\"headerlink\" title=\"运行生成发布\"></a>运行生成发布</h3><p>执行命令发布<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo hexo generate</span><br><span class=\"line\">$ sudo hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>或者缩写</p>\n<pre><code>sudo hexo d -g\n</code></pre><p>以后更新了文章 再执行命令，来更新站点<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo hexo generate</span><br><span class=\"line\">$ sudo hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>或者缩写</p>\n<pre><code>sudo hexo d -g\n</code></pre><p>如果改动了站点的源码，需要在发布之前<br>    $ sudo hexo clean</p>\n<p>如果成功了就可以通过yourusername.github.com或者yourusername.github.io来访问你的博客了</p>\n<h2 id=\"自定义博客\"><a href=\"#自定义博客\" class=\"headerlink\" title=\"自定义博客\"></a>自定义博客</h2><h3 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h3><p>如果你对默认的主题不满意，可以通过克隆的方式，把别人的主题克隆过来,比如我使用的这一套</p>\n<pre><code>git clone https://github.com/iissnan/hexo-theme-next.git themes/next\n</code></pre><p>然后在_config.yml中theme选项下 指定主题，比如我指定为</p>\n<pre><code>theme: next\n</code></pre><p>更多的主题可以<a href=\"https://www.zhihu.com/question/24422335\" target=\"_blank\" rel=\"external\">参考</a></p>\n","excerpt":"","more":"<h2 id=\"感想，第一篇日记\"><a href=\"#感想，第一篇日记\" class=\"headerlink\" title=\"感想，第一篇日记\"></a>感想，第一篇日记</h2><blockquote><p>做技术5年多了,其间有多次想好好写博客，一直没有坚持下来，中间断断续续使用过一些博客产品都没有坚持。<br>最近看了一博文，感触很深，所以决定重新开启博客之旅，并好好坚持下去。<br>一来是，给自己技术学习的一种积累，梳理。<br>二来，提高自己书面表达能力，前几年书没有觉得，现在是觉得自己表达能力真的出了问题。<br>之前就有使用过github搭建博客，不过之前使用的是Octopress，然后也是跟风，搭完就没用了。<br>这次看了文章<a href=\"http://bbs.ruoren.com/thread-35485316-1-1.html\">《我为什么坚持写博客》</a>目标是每周至少3篇认真原创文章。<br>好，废话不多说，开始。</p>\n</blockquote>\n<h2 id=\"准备工作，从零开始\"><a href=\"#准备工作，从零开始\" class=\"headerlink\" title=\"准备工作，从零开始\"></a>准备工作，从零开始</h2><p>Hexo是一款基于Node.js的静态博客框架，而Node.js可以简单理解为可以用js语言写服务器后端的框架。<br>然后如果要发布到github上需要git和github帐号。<br>因为用的是mac环境，所以直接用Homebrew（这是mac下超强的包管理工具，基本开发人员必备）来安装。</p>\n<p><strong>如果有安装过可以跳过步骤</strong><br><strong>这里可能出现一些问题，可能由于权限问题，如果是，在命令前加sudo。</strong></p>\n<h3 id=\"安装-Homebrew\"><a href=\"#安装-Homebrew\" class=\"headerlink\" title=\"安装 Homebrew\"></a>安装 Homebrew</h3><p>命令行直接输入</p>\n<pre><code>$ ruby -e &quot;$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)”\n</code></pre><h3 id=\"安装-git\"><a href=\"#安装-git\" class=\"headerlink\" title=\"安装 git\"></a>安装 git</h3><p>因为安装过Homebrew，可以使用命令brew</p>\n<pre><code>$ brew install git\n</code></pre><h3 id=\"安装-node-js\"><a href=\"#安装-node-js\" class=\"headerlink\" title=\"安装 node.js\"></a>安装 node.js</h3><pre><code>$ brew install node\n</code></pre><h3 id=\"安装-hexo\"><a href=\"#安装-hexo\" class=\"headerlink\" title=\"安装 hexo\"></a>安装 hexo</h3><pre><code>$ npm install -g hexo\n</code></pre><p>这里的npm是node下的一个包管理工具。<br>－g命令代表全局安装，否则安装到命令执行时当前.／node_modules目录。<br>－g会安装到{prefix}／node_modules目录。prefix是默认制定的，一般在prefix = “/usr/local”<br>命令 npm config ls 可查看 prefix<br>命令 npm config set prefix “xxxxx” 可以指定prefix目录（不建议修改）</p>\n<p><strong>到此为止，安装完毕</strong><br><strong>这里可能出现一些问题，可能由于权限问题，如果是，在命令前加sudo。</strong></p>\n<h2 id=\"安装博客-调试\"><a href=\"#安装博客-调试\" class=\"headerlink\" title=\"安装博客,调试\"></a>安装博客,调试</h2><h3 id=\"创建博客\"><a href=\"#创建博客\" class=\"headerlink\" title=\"创建博客\"></a>创建博客</h3><p>创建本地一个目录，用来创建博客，比如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir hexo</span><br><span class=\"line\">$ cd hexo</span><br><span class=\"line\">$ sudo hexo init</span><br></pre></td></tr></table></figure><br>创建完毕！</p>\n<h3 id=\"本地调试\"><a href=\"#本地调试\" class=\"headerlink\" title=\"本地调试\"></a>本地调试</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo hexo server</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>\n<p>或者，缩写<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo hexo s</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><br>然后可以访问 <a href=\"http://localhost:4000\">http://localhost:4000</a> 来查看结果</p>\n<p><strong>注意如果访问一直没响应 可能有端口占用问题，可以运行下面命令指定端口</strong></p>\n<pre><code>$ sudo hexo server -p xxxx\n</code></pre><p><strong>更多hexo命令用法，可以查看我的<a href=\"http://tangfuhao.github.io/2016/03/03/Hexo%E5%86%99%E5%8D%9A%E5%AE%A2%E9%9C%80%E8%A6%81%E7%9A%84%E6%89%80%E6%9C%89%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/\">Hexo写博客需要的所有知识总结</a></strong></p>\n<h2 id=\"发布到github\"><a href=\"#发布到github\" class=\"headerlink\" title=\"发布到github\"></a>发布到github</h2><p><em>需要注册github帐号，这个很简单略过</em></p>\n<h3 id=\"设置github帐号ssh验证-可以跳过\"><a href=\"#设置github帐号ssh验证-可以跳过\" class=\"headerlink\" title=\"设置github帐号ssh验证(可以跳过)\"></a>设置github帐号ssh验证(可以跳过)</h3><p>首先需要在本机设置ssh key以保证push工程时不需要在授权,如果没有设置，也会在发布时要求输入帐号密码</p>\n<h3 id=\"利用github二级域名-创建资源\"><a href=\"#利用github二级域名-创建资源\" class=\"headerlink\" title=\"利用github二级域名 创建资源\"></a>利用github二级域名 创建资源</h3><p>github会提供以用户名创建的二级域名，例如：yourusername.github.com<br>用法是需要创建一个名称为yourusername.github.io的资源<br>比如我的用户名为tangfuhao所以创建一个tangfuhao.github.io的资源<br>然后当发布完资源后可以通过yourusername.github.com或者yourusername.github.io来访问网站</p>\n<p>创建资源过程略过。</p>\n<h3 id=\"安装发布插件\"><a href=\"#安装发布插件\" class=\"headerlink\" title=\"安装发布插件\"></a>安装发布插件</h3><p>在博客文件夹运行下面命令，来安装git部署的工具</p>\n<pre><code>$ npm install hexo-deployer-git --save\n</code></pre><p>然后在_config.yml文件修改发布的配置，最后一行改为（注意替换yourusername）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/yourusername/yourusername.github.com.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"运行生成发布\"><a href=\"#运行生成发布\" class=\"headerlink\" title=\"运行生成发布\"></a>运行生成发布</h3><p>执行命令发布<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo hexo generate</span><br><span class=\"line\">$ sudo hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>或者缩写</p>\n<pre><code>sudo hexo d -g\n</code></pre><p>以后更新了文章 再执行命令，来更新站点<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo hexo generate</span><br><span class=\"line\">$ sudo hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>或者缩写</p>\n<pre><code>sudo hexo d -g\n</code></pre><p>如果改动了站点的源码，需要在发布之前<br>    $ sudo hexo clean</p>\n<p>如果成功了就可以通过yourusername.github.com或者yourusername.github.io来访问你的博客了</p>\n<h2 id=\"自定义博客\"><a href=\"#自定义博客\" class=\"headerlink\" title=\"自定义博客\"></a>自定义博客</h2><h3 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h3><p>如果你对默认的主题不满意，可以通过克隆的方式，把别人的主题克隆过来,比如我使用的这一套</p>\n<pre><code>git clone https://github.com/iissnan/hexo-theme-next.git themes/next\n</code></pre><p>然后在_config.yml中theme选项下 指定主题，比如我指定为</p>\n<pre><code>theme: next\n</code></pre><p>更多的主题可以<a href=\"https://www.zhihu.com/question/24422335\">参考</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cilhs08570005ggd5mii1sdcd","category_id":"cilhs085j0009ggd5bzi0881u","_id":"cilhs085u000fggd5zba59z5k"},{"post_id":"cilhs085b0007ggd5vj3qk5ey","category_id":"cilhs085t000eggd5jwjnmio4","_id":"cilhs085x000iggd5phrtw6r6"},{"post_id":"cilhs085n000bggd55e94ciz9","category_id":"cilhs085v000hggd5nn5f4v7l","_id":"cilhs085z000lggd564eqfo3k"},{"post_id":"cilhs085r000dggd5j1r59mkc","category_id":"cilhs085t000eggd5jwjnmio4","_id":"cilhs0860000oggd5nt5ror8o"}],"PostTag":[{"post_id":"cilhs08570005ggd5mii1sdcd","tag_id":"cilhs085d0008ggd51m4ppww6","_id":"cilhs0860000nggd5cfjm80fw"},{"post_id":"cilhs08570005ggd5mii1sdcd","tag_id":"cilhs085q000cggd526vk9ani","_id":"cilhs0861000pggd53weqigaa"},{"post_id":"cilhs08570005ggd5mii1sdcd","tag_id":"cilhs085u000gggd5nfmuiubc","_id":"cilhs0861000rggd5utyapehr"},{"post_id":"cilhs08570005ggd5mii1sdcd","tag_id":"cilhs085x000jggd5m4wildyb","_id":"cilhs0861000sggd5p53nz5ye"},{"post_id":"cilhs085b0007ggd5vj3qk5ey","tag_id":"cilhs085z000mggd5q9qz9kdz","_id":"cilhs0862000vggd52ecab3j5"},{"post_id":"cilhs085b0007ggd5vj3qk5ey","tag_id":"cilhs0861000qggd5g7ilzk8m","_id":"cilhs0862000wggd56pbtbp59"},{"post_id":"cilhs085b0007ggd5vj3qk5ey","tag_id":"cilhs0862000tggd50kk6441i","_id":"cilhs0863000yggd5qbjd75pd"},{"post_id":"cilhs085n000bggd55e94ciz9","tag_id":"cilhs0861000qggd5g7ilzk8m","_id":"cilhs08640010ggd5qqljq4qi"},{"post_id":"cilhs085n000bggd55e94ciz9","tag_id":"cilhs0862000xggd5x5ff29hq","_id":"cilhs08640011ggd5qutcce2q"},{"post_id":"cilhs085r000dggd5j1r59mkc","tag_id":"cilhs085z000mggd5q9qz9kdz","_id":"cilhs08650014ggd59yyt5war"},{"post_id":"cilhs085r000dggd5j1r59mkc","tag_id":"cilhs08640012ggd5zuxxnxug","_id":"cilhs08650015ggd5g263c2rl"},{"post_id":"cilhs085r000dggd5j1r59mkc","tag_id":"cilhs08640013ggd53phexv1x","_id":"cilhs08650016ggd5jp924jvi"}],"Tag":[{"name":"android","_id":"cilhs085d0008ggd51m4ppww6"},{"name":"sqlite3","_id":"cilhs085q000cggd526vk9ani"},{"name":"c/c++","_id":"cilhs085u000gggd5nfmuiubc"},{"name":"ndk","_id":"cilhs085x000jggd5m4wildyb"},{"name":"Hexo","_id":"cilhs085z000mggd5q9qz9kdz"},{"name":"markdown","_id":"cilhs0861000qggd5g7ilzk8m"},{"name":"经验总结","_id":"cilhs0862000tggd50kk6441i"},{"name":"demo","_id":"cilhs0862000xggd5x5ff29hq"},{"name":"Github","_id":"cilhs08640012ggd5zuxxnxug"},{"name":"工具","_id":"cilhs08640013ggd53phexv1x"}]}}